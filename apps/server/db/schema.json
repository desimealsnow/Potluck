{
    "views": [
        {
            "name": "geography_columns",
            "schema": "public",
            "comment": null,
            "definition": " SELECT current_database() AS f_table_catalog,\n    n.nspname AS f_table_schema,\n    c.relname AS f_table_name,\n    a.attname AS f_geography_column,\n    postgis_typmod_dims(a.atttypmod) AS coord_dimension,\n    postgis_typmod_srid(a.atttypmod) AS srid,\n    postgis_typmod_type(a.atttypmod) AS type\n   FROM pg_class c,\n    pg_attribute a,\n    pg_type t,\n    pg_namespace n\n  WHERE t.typname = 'geography'::name AND a.attisdropped = false AND a.atttypid = t.oid AND a.attrelid = c.oid AND c.relnamespace = n.oid AND (c.relkind = ANY (ARRAY['r'::\"char\", 'v'::\"char\", 'm'::\"char\", 'f'::\"char\", 'p'::\"char\"])) AND NOT pg_is_other_temp_schema(c.relnamespace) AND has_table_privilege(c.oid, 'SELECT'::text);"
        },
        {
            "name": "geometry_columns",
            "schema": "public",
            "comment": null,
            "definition": " SELECT current_database()::character varying(256) AS f_table_catalog,\n    n.nspname AS f_table_schema,\n    c.relname AS f_table_name,\n    a.attname AS f_geometry_column,\n    COALESCE(postgis_typmod_dims(a.atttypmod), sn.ndims, 2) AS coord_dimension,\n    COALESCE(NULLIF(postgis_typmod_srid(a.atttypmod), 0), sr.srid, 0) AS srid,\n    replace(replace(COALESCE(NULLIF(upper(postgis_typmod_type(a.atttypmod)), 'GEOMETRY'::text), st.type, 'GEOMETRY'::text), 'ZM'::text, ''::text), 'Z'::text, ''::text)::character varying(30) AS type\n   FROM pg_class c\n     JOIN pg_attribute a ON a.attrelid = c.oid AND NOT a.attisdropped\n     JOIN pg_namespace n ON c.relnamespace = n.oid\n     JOIN pg_type t ON a.atttypid = t.oid\n     LEFT JOIN ( SELECT s.connamespace,\n            s.conrelid,\n            s.conkey,\n            replace(split_part(s.consrc, ''''::text, 2), ')'::text, ''::text) AS type\n           FROM ( SELECT pg_constraint.connamespace,\n                    pg_constraint.conrelid,\n                    pg_constraint.conkey,\n                    pg_get_constraintdef(pg_constraint.oid) AS consrc\n                   FROM pg_constraint) s\n          WHERE s.consrc ~~* '%geometrytype(% = %'::text) st ON st.connamespace = n.oid AND st.conrelid = c.oid AND (a.attnum = ANY (st.conkey))\n     LEFT JOIN ( SELECT s.connamespace,\n            s.conrelid,\n            s.conkey,\n            replace(split_part(s.consrc, ' = '::text, 2), ')'::text, ''::text)::integer AS ndims\n           FROM ( SELECT pg_constraint.connamespace,\n                    pg_constraint.conrelid,\n                    pg_constraint.conkey,\n                    pg_get_constraintdef(pg_constraint.oid) AS consrc\n                   FROM pg_constraint) s\n          WHERE s.consrc ~~* '%ndims(% = %'::text) sn ON sn.connamespace = n.oid AND sn.conrelid = c.oid AND (a.attnum = ANY (sn.conkey))\n     LEFT JOIN ( SELECT s.connamespace,\n            s.conrelid,\n            s.conkey,\n            replace(replace(split_part(s.consrc, ' = '::text, 2), ')'::text, ''::text), '('::text, ''::text)::integer AS srid\n           FROM ( SELECT pg_constraint.connamespace,\n                    pg_constraint.conrelid,\n                    pg_constraint.conkey,\n                    pg_get_constraintdef(pg_constraint.oid) AS consrc\n                   FROM pg_constraint) s\n          WHERE s.consrc ~~* '%srid(% = %'::text) sr ON sr.connamespace = n.oid AND sr.conrelid = c.oid AND (a.attnum = ANY (sr.conkey))\n  WHERE (c.relkind = ANY (ARRAY['r'::\"char\", 'v'::\"char\", 'm'::\"char\", 'f'::\"char\", 'p'::\"char\"])) AND NOT c.relname = 'raster_columns'::name AND t.typname = 'geometry'::name AND NOT pg_is_other_temp_schema(c.relnamespace) AND has_table_privilege(c.oid, 'SELECT'::text);"
        }
    ],
    "schemas": [
        {
            "table": "audit_log_entries",
            "schema": "auth",
            "columns": [
                {
                    "name": "instance_id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "payload",
                    "type": "json",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "created_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "ip_address",
                    "type": "character varying(64)",
                    "comment": null,
                    "default": "''::character varying",
                    "nullable": false
                }
            ],
            "comment": "Auth: Audit trail for user actions.",
            "indexes": [
                {
                    "def": "CREATE UNIQUE INDEX audit_log_entries_pkey ON auth.audit_log_entries USING btree (id)",
                    "name": "audit_log_entries_pkey"
                },
                {
                    "def": "CREATE INDEX audit_logs_instance_id_idx ON auth.audit_log_entries USING btree (instance_id)",
                    "name": "audit_logs_instance_id_idx"
                }
            ],
            "policies": [
            ],
            "primary_key": [
                "id"
            ],
            "foreign_keys": [
            ]
        },
        {
            "table": "flow_state",
            "schema": "auth",
            "columns": [
                {
                    "name": "id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "user_id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "auth_code",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "code_challenge_method",
                    "type": "auth.code_challenge_method",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "code_challenge",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "provider_type",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "provider_access_token",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "provider_refresh_token",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "created_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "updated_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "authentication_method",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "auth_code_issued_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": null,
                    "nullable": true
                }
            ],
            "comment": "stores metadata for pkce logins",
            "indexes": [
                {
                    "def": "CREATE UNIQUE INDEX flow_state_pkey ON auth.flow_state USING btree (id)",
                    "name": "flow_state_pkey"
                },
                {
                    "def": "CREATE INDEX flow_state_created_at_idx ON auth.flow_state USING btree (created_at DESC)",
                    "name": "flow_state_created_at_idx"
                },
                {
                    "def": "CREATE INDEX idx_auth_code ON auth.flow_state USING btree (auth_code)",
                    "name": "idx_auth_code"
                },
                {
                    "def": "CREATE INDEX idx_user_id_auth_method ON auth.flow_state USING btree (user_id, authentication_method)",
                    "name": "idx_user_id_auth_method"
                }
            ],
            "policies": [
            ],
            "primary_key": [
                "id"
            ],
            "foreign_keys": [
            ]
        },
        {
            "table": "identities",
            "schema": "auth",
            "columns": [
                {
                    "name": "provider_id",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "user_id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "identity_data",
                    "type": "jsonb",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "provider",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "last_sign_in_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "created_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "updated_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "email",
                    "type": "text",
                    "comment": "Auth: Email is a generated column that references the optional email property in the identity_data",
                    "default": "lower((identity_data ->> 'email'::text))",
                    "nullable": true
                },
                {
                    "name": "id",
                    "type": "uuid",
                    "comment": null,
                    "default": "gen_random_uuid()",
                    "nullable": false
                }
            ],
            "comment": "Auth: Stores identities associated to a user.",
            "indexes": [
                {
                    "def": "CREATE UNIQUE INDEX identities_pkey ON auth.identities USING btree (id)",
                    "name": "identities_pkey"
                },
                {
                    "def": "CREATE UNIQUE INDEX identities_provider_id_provider_unique ON auth.identities USING btree (provider_id, provider)",
                    "name": "identities_provider_id_provider_unique"
                },
                {
                    "def": "CREATE INDEX identities_email_idx ON auth.identities USING btree (email text_pattern_ops)",
                    "name": "identities_email_idx"
                },
                {
                    "def": "CREATE INDEX identities_user_id_idx ON auth.identities USING btree (user_id)",
                    "name": "identities_user_id_idx"
                }
            ],
            "policies": [
            ],
            "primary_key": [
                "id"
            ],
            "foreign_keys": [
                {
                    "name": "identities_user_id_fkey",
                    "delete": "c",
                    "update": "a",
                    "columns": [
                        "user_id"
                    ],
                    "references": {
                        "table": "users",
                        "schema": "auth",
                        "columns": [
                            "id"
                        ]
                    }
                }
            ]
        },
        {
            "table": "instances",
            "schema": "auth",
            "columns": [
                {
                    "name": "id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "uuid",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "raw_base_config",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "created_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "updated_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": null,
                    "nullable": true
                }
            ],
            "comment": "Auth: Manages users across multiple sites.",
            "indexes": [
                {
                    "def": "CREATE UNIQUE INDEX instances_pkey ON auth.instances USING btree (id)",
                    "name": "instances_pkey"
                }
            ],
            "policies": [
            ],
            "primary_key": [
                "id"
            ],
            "foreign_keys": [
            ]
        },
        {
            "table": "mfa_amr_claims",
            "schema": "auth",
            "columns": [
                {
                    "name": "session_id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "created_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "updated_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "authentication_method",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": false
                }
            ],
            "comment": "auth: stores authenticator method reference claims for multi factor authentication",
            "indexes": [
                {
                    "def": "CREATE UNIQUE INDEX amr_id_pk ON auth.mfa_amr_claims USING btree (id)",
                    "name": "amr_id_pk"
                },
                {
                    "def": "CREATE UNIQUE INDEX mfa_amr_claims_session_id_authentication_method_pkey ON auth.mfa_amr_claims USING btree (session_id, authentication_method)",
                    "name": "mfa_amr_claims_session_id_authentication_method_pkey"
                }
            ],
            "policies": [
            ],
            "primary_key": [
                "id"
            ],
            "foreign_keys": [
                {
                    "name": "mfa_amr_claims_session_id_fkey",
                    "delete": "c",
                    "update": "a",
                    "columns": [
                        "session_id"
                    ],
                    "references": {
                        "table": "sessions",
                        "schema": "auth",
                        "columns": [
                            "id"
                        ]
                    }
                }
            ]
        },
        {
            "table": "mfa_challenges",
            "schema": "auth",
            "columns": [
                {
                    "name": "id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "factor_id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "created_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "verified_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "ip_address",
                    "type": "inet",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "otp_code",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "web_authn_session_data",
                    "type": "jsonb",
                    "comment": null,
                    "default": null,
                    "nullable": true
                }
            ],
            "comment": "auth: stores metadata about challenge requests made",
            "indexes": [
                {
                    "def": "CREATE UNIQUE INDEX mfa_challenges_pkey ON auth.mfa_challenges USING btree (id)",
                    "name": "mfa_challenges_pkey"
                },
                {
                    "def": "CREATE INDEX mfa_challenge_created_at_idx ON auth.mfa_challenges USING btree (created_at DESC)",
                    "name": "mfa_challenge_created_at_idx"
                }
            ],
            "policies": [
            ],
            "primary_key": [
                "id"
            ],
            "foreign_keys": [
                {
                    "name": "mfa_challenges_auth_factor_id_fkey",
                    "delete": "c",
                    "update": "a",
                    "columns": [
                        "factor_id"
                    ],
                    "references": {
                        "table": "mfa_factors",
                        "schema": "auth",
                        "columns": [
                            "id"
                        ]
                    }
                }
            ]
        },
        {
            "table": "mfa_factors",
            "schema": "auth",
            "columns": [
                {
                    "name": "id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "user_id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "friendly_name",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "factor_type",
                    "type": "auth.factor_type",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "status",
                    "type": "auth.factor_status",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "created_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "updated_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "secret",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "phone",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "last_challenged_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "web_authn_credential",
                    "type": "jsonb",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "web_authn_aaguid",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": true
                }
            ],
            "comment": "auth: stores metadata about factors",
            "indexes": [
                {
                    "def": "CREATE UNIQUE INDEX mfa_factors_last_challenged_at_key ON auth.mfa_factors USING btree (last_challenged_at)",
                    "name": "mfa_factors_last_challenged_at_key"
                },
                {
                    "def": "CREATE UNIQUE INDEX mfa_factors_pkey ON auth.mfa_factors USING btree (id)",
                    "name": "mfa_factors_pkey"
                },
                {
                    "def": "CREATE INDEX factor_id_created_at_idx ON auth.mfa_factors USING btree (user_id, created_at)",
                    "name": "factor_id_created_at_idx"
                },
                {
                    "def": "CREATE UNIQUE INDEX mfa_factors_user_friendly_name_unique ON auth.mfa_factors USING btree (friendly_name, user_id) WHERE (TRIM(BOTH FROM friendly_name) <> ''::text)",
                    "name": "mfa_factors_user_friendly_name_unique"
                },
                {
                    "def": "CREATE INDEX mfa_factors_user_id_idx ON auth.mfa_factors USING btree (user_id)",
                    "name": "mfa_factors_user_id_idx"
                },
                {
                    "def": "CREATE UNIQUE INDEX unique_phone_factor_per_user ON auth.mfa_factors USING btree (user_id, phone)",
                    "name": "unique_phone_factor_per_user"
                }
            ],
            "policies": [
            ],
            "primary_key": [
                "id"
            ],
            "foreign_keys": [
                {
                    "name": "mfa_factors_user_id_fkey",
                    "delete": "c",
                    "update": "a",
                    "columns": [
                        "user_id"
                    ],
                    "references": {
                        "table": "users",
                        "schema": "auth",
                        "columns": [
                            "id"
                        ]
                    }
                }
            ]
        },
        {
            "table": "oauth_clients",
            "schema": "auth",
            "columns": [
                {
                    "name": "id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "client_id",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "client_secret_hash",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "registration_type",
                    "type": "auth.oauth_registration_type",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "redirect_uris",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "grant_types",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "client_name",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "client_uri",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "logo_uri",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "created_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": "now()",
                    "nullable": false
                },
                {
                    "name": "updated_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": "now()",
                    "nullable": false
                },
                {
                    "name": "deleted_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": null,
                    "nullable": true
                }
            ],
            "comment": null,
            "indexes": [
                {
                    "def": "CREATE UNIQUE INDEX oauth_clients_pkey ON auth.oauth_clients USING btree (id)",
                    "name": "oauth_clients_pkey"
                },
                {
                    "def": "CREATE UNIQUE INDEX oauth_clients_client_id_key ON auth.oauth_clients USING btree (client_id)",
                    "name": "oauth_clients_client_id_key"
                },
                {
                    "def": "CREATE INDEX oauth_clients_client_id_idx ON auth.oauth_clients USING btree (client_id)",
                    "name": "oauth_clients_client_id_idx"
                },
                {
                    "def": "CREATE INDEX oauth_clients_deleted_at_idx ON auth.oauth_clients USING btree (deleted_at)",
                    "name": "oauth_clients_deleted_at_idx"
                }
            ],
            "policies": [
            ],
            "primary_key": [
                "id"
            ],
            "foreign_keys": [
            ]
        },
        {
            "table": "one_time_tokens",
            "schema": "auth",
            "columns": [
                {
                    "name": "id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "user_id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "token_type",
                    "type": "auth.one_time_token_type",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "token_hash",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "relates_to",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "created_at",
                    "type": "timestamp without time zone",
                    "comment": null,
                    "default": "now()",
                    "nullable": false
                },
                {
                    "name": "updated_at",
                    "type": "timestamp without time zone",
                    "comment": null,
                    "default": "now()",
                    "nullable": false
                }
            ],
            "comment": null,
            "indexes": [
                {
                    "def": "CREATE UNIQUE INDEX one_time_tokens_pkey ON auth.one_time_tokens USING btree (id)",
                    "name": "one_time_tokens_pkey"
                },
                {
                    "def": "CREATE INDEX one_time_tokens_relates_to_hash_idx ON auth.one_time_tokens USING hash (relates_to)",
                    "name": "one_time_tokens_relates_to_hash_idx"
                },
                {
                    "def": "CREATE INDEX one_time_tokens_token_hash_hash_idx ON auth.one_time_tokens USING hash (token_hash)",
                    "name": "one_time_tokens_token_hash_hash_idx"
                },
                {
                    "def": "CREATE UNIQUE INDEX one_time_tokens_user_id_token_type_key ON auth.one_time_tokens USING btree (user_id, token_type)",
                    "name": "one_time_tokens_user_id_token_type_key"
                }
            ],
            "policies": [
            ],
            "primary_key": [
                "id"
            ],
            "foreign_keys": [
                {
                    "name": "one_time_tokens_user_id_fkey",
                    "delete": "c",
                    "update": "a",
                    "columns": [
                        "user_id"
                    ],
                    "references": {
                        "table": "users",
                        "schema": "auth",
                        "columns": [
                            "id"
                        ]
                    }
                }
            ]
        },
        {
            "table": "refresh_tokens",
            "schema": "auth",
            "columns": [
                {
                    "name": "instance_id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "id",
                    "type": "bigint",
                    "comment": null,
                    "default": "nextval('auth.refresh_tokens_id_seq'::regclass)",
                    "nullable": false
                },
                {
                    "name": "token",
                    "type": "character varying(255)",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "user_id",
                    "type": "character varying(255)",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "revoked",
                    "type": "boolean",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "created_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "updated_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "parent",
                    "type": "character varying(255)",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "session_id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": true
                }
            ],
            "comment": "Auth: Store of tokens used to refresh JWT tokens once they expire.",
            "indexes": [
                {
                    "def": "CREATE UNIQUE INDEX refresh_tokens_pkey ON auth.refresh_tokens USING btree (id)",
                    "name": "refresh_tokens_pkey"
                },
                {
                    "def": "CREATE UNIQUE INDEX refresh_tokens_token_unique ON auth.refresh_tokens USING btree (token)",
                    "name": "refresh_tokens_token_unique"
                },
                {
                    "def": "CREATE INDEX refresh_tokens_instance_id_idx ON auth.refresh_tokens USING btree (instance_id)",
                    "name": "refresh_tokens_instance_id_idx"
                },
                {
                    "def": "CREATE INDEX refresh_tokens_instance_id_user_id_idx ON auth.refresh_tokens USING btree (instance_id, user_id)",
                    "name": "refresh_tokens_instance_id_user_id_idx"
                },
                {
                    "def": "CREATE INDEX refresh_tokens_parent_idx ON auth.refresh_tokens USING btree (parent)",
                    "name": "refresh_tokens_parent_idx"
                },
                {
                    "def": "CREATE INDEX refresh_tokens_session_id_revoked_idx ON auth.refresh_tokens USING btree (session_id, revoked)",
                    "name": "refresh_tokens_session_id_revoked_idx"
                },
                {
                    "def": "CREATE INDEX refresh_tokens_updated_at_idx ON auth.refresh_tokens USING btree (updated_at DESC)",
                    "name": "refresh_tokens_updated_at_idx"
                }
            ],
            "policies": [
            ],
            "primary_key": [
                "id"
            ],
            "foreign_keys": [
                {
                    "name": "refresh_tokens_session_id_fkey",
                    "delete": "c",
                    "update": "a",
                    "columns": [
                        "session_id"
                    ],
                    "references": {
                        "table": "sessions",
                        "schema": "auth",
                        "columns": [
                            "id"
                        ]
                    }
                }
            ]
        },
        {
            "table": "saml_providers",
            "schema": "auth",
            "columns": [
                {
                    "name": "id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "sso_provider_id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "entity_id",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "metadata_xml",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "metadata_url",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "attribute_mapping",
                    "type": "jsonb",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "created_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "updated_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "name_id_format",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": true
                }
            ],
            "comment": "Auth: Manages SAML Identity Provider connections.",
            "indexes": [
                {
                    "def": "CREATE UNIQUE INDEX saml_providers_entity_id_key ON auth.saml_providers USING btree (entity_id)",
                    "name": "saml_providers_entity_id_key"
                },
                {
                    "def": "CREATE UNIQUE INDEX saml_providers_pkey ON auth.saml_providers USING btree (id)",
                    "name": "saml_providers_pkey"
                },
                {
                    "def": "CREATE INDEX saml_providers_sso_provider_id_idx ON auth.saml_providers USING btree (sso_provider_id)",
                    "name": "saml_providers_sso_provider_id_idx"
                }
            ],
            "policies": [
            ],
            "primary_key": [
                "id"
            ],
            "foreign_keys": [
                {
                    "name": "saml_providers_sso_provider_id_fkey",
                    "delete": "c",
                    "update": "a",
                    "columns": [
                        "sso_provider_id"
                    ],
                    "references": {
                        "table": "sso_providers",
                        "schema": "auth",
                        "columns": [
                            "id"
                        ]
                    }
                }
            ]
        },
        {
            "table": "saml_relay_states",
            "schema": "auth",
            "columns": [
                {
                    "name": "id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "sso_provider_id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "request_id",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "for_email",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "redirect_to",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "created_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "updated_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "flow_state_id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": true
                }
            ],
            "comment": "Auth: Contains SAML Relay State information for each Service Provider initiated login.",
            "indexes": [
                {
                    "def": "CREATE UNIQUE INDEX saml_relay_states_pkey ON auth.saml_relay_states USING btree (id)",
                    "name": "saml_relay_states_pkey"
                },
                {
                    "def": "CREATE INDEX saml_relay_states_created_at_idx ON auth.saml_relay_states USING btree (created_at DESC)",
                    "name": "saml_relay_states_created_at_idx"
                },
                {
                    "def": "CREATE INDEX saml_relay_states_for_email_idx ON auth.saml_relay_states USING btree (for_email)",
                    "name": "saml_relay_states_for_email_idx"
                },
                {
                    "def": "CREATE INDEX saml_relay_states_sso_provider_id_idx ON auth.saml_relay_states USING btree (sso_provider_id)",
                    "name": "saml_relay_states_sso_provider_id_idx"
                }
            ],
            "policies": [
            ],
            "primary_key": [
                "id"
            ],
            "foreign_keys": [
                {
                    "name": "saml_relay_states_flow_state_id_fkey",
                    "delete": "c",
                    "update": "a",
                    "columns": [
                        "flow_state_id"
                    ],
                    "references": {
                        "table": "flow_state",
                        "schema": "auth",
                        "columns": [
                            "id"
                        ]
                    }
                },
                {
                    "name": "saml_relay_states_sso_provider_id_fkey",
                    "delete": "c",
                    "update": "a",
                    "columns": [
                        "sso_provider_id"
                    ],
                    "references": {
                        "table": "sso_providers",
                        "schema": "auth",
                        "columns": [
                            "id"
                        ]
                    }
                }
            ]
        },
        {
            "table": "schema_migrations",
            "schema": "auth",
            "columns": [
                {
                    "name": "version",
                    "type": "character varying(255)",
                    "comment": null,
                    "default": null,
                    "nullable": false
                }
            ],
            "comment": "Auth: Manages updates to the auth system.",
            "indexes": [
                {
                    "def": "CREATE UNIQUE INDEX schema_migrations_pkey ON auth.schema_migrations USING btree (version)",
                    "name": "schema_migrations_pkey"
                }
            ],
            "policies": [
            ],
            "primary_key": [
                "version"
            ],
            "foreign_keys": [
            ]
        },
        {
            "table": "sessions",
            "schema": "auth",
            "columns": [
                {
                    "name": "id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "user_id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "created_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "updated_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "factor_id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "aal",
                    "type": "auth.aal_level",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "not_after",
                    "type": "timestamp with time zone",
                    "comment": "Auth: Not after is a nullable column that contains a timestamp after which the session should be regarded as expired.",
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "refreshed_at",
                    "type": "timestamp without time zone",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "user_agent",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "ip",
                    "type": "inet",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "tag",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": true
                }
            ],
            "comment": "Auth: Stores session data associated to a user.",
            "indexes": [
                {
                    "def": "CREATE UNIQUE INDEX sessions_pkey ON auth.sessions USING btree (id)",
                    "name": "sessions_pkey"
                },
                {
                    "def": "CREATE INDEX sessions_not_after_idx ON auth.sessions USING btree (not_after DESC)",
                    "name": "sessions_not_after_idx"
                },
                {
                    "def": "CREATE INDEX sessions_user_id_idx ON auth.sessions USING btree (user_id)",
                    "name": "sessions_user_id_idx"
                },
                {
                    "def": "CREATE INDEX user_id_created_at_idx ON auth.sessions USING btree (user_id, created_at)",
                    "name": "user_id_created_at_idx"
                }
            ],
            "policies": [
            ],
            "primary_key": [
                "id"
            ],
            "foreign_keys": [
                {
                    "name": "sessions_user_id_fkey",
                    "delete": "c",
                    "update": "a",
                    "columns": [
                        "user_id"
                    ],
                    "references": {
                        "table": "users",
                        "schema": "auth",
                        "columns": [
                            "id"
                        ]
                    }
                }
            ]
        },
        {
            "table": "sso_domains",
            "schema": "auth",
            "columns": [
                {
                    "name": "id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "sso_provider_id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "domain",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "created_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "updated_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": null,
                    "nullable": true
                }
            ],
            "comment": "Auth: Manages SSO email address domain mapping to an SSO Identity Provider.",
            "indexes": [
                {
                    "def": "CREATE UNIQUE INDEX sso_domains_pkey ON auth.sso_domains USING btree (id)",
                    "name": "sso_domains_pkey"
                },
                {
                    "def": "CREATE UNIQUE INDEX sso_domains_domain_idx ON auth.sso_domains USING btree (lower(domain))",
                    "name": "sso_domains_domain_idx"
                },
                {
                    "def": "CREATE INDEX sso_domains_sso_provider_id_idx ON auth.sso_domains USING btree (sso_provider_id)",
                    "name": "sso_domains_sso_provider_id_idx"
                }
            ],
            "policies": [
            ],
            "primary_key": [
                "id"
            ],
            "foreign_keys": [
                {
                    "name": "sso_domains_sso_provider_id_fkey",
                    "delete": "c",
                    "update": "a",
                    "columns": [
                        "sso_provider_id"
                    ],
                    "references": {
                        "table": "sso_providers",
                        "schema": "auth",
                        "columns": [
                            "id"
                        ]
                    }
                }
            ]
        },
        {
            "table": "sso_providers",
            "schema": "auth",
            "columns": [
                {
                    "name": "id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "resource_id",
                    "type": "text",
                    "comment": "Auth: Uniquely identifies a SSO provider according to a user-chosen resource ID (case insensitive), useful in infrastructure as code.",
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "created_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "updated_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "disabled",
                    "type": "boolean",
                    "comment": null,
                    "default": null,
                    "nullable": true
                }
            ],
            "comment": "Auth: Manages SSO identity provider information; see saml_providers for SAML.",
            "indexes": [
                {
                    "def": "CREATE UNIQUE INDEX sso_providers_pkey ON auth.sso_providers USING btree (id)",
                    "name": "sso_providers_pkey"
                },
                {
                    "def": "CREATE UNIQUE INDEX sso_providers_resource_id_idx ON auth.sso_providers USING btree (lower(resource_id))",
                    "name": "sso_providers_resource_id_idx"
                },
                {
                    "def": "CREATE INDEX sso_providers_resource_id_pattern_idx ON auth.sso_providers USING btree (resource_id text_pattern_ops)",
                    "name": "sso_providers_resource_id_pattern_idx"
                }
            ],
            "policies": [
            ],
            "primary_key": [
                "id"
            ],
            "foreign_keys": [
            ]
        },
        {
            "table": "users",
            "schema": "auth",
            "columns": [
                {
                    "name": "instance_id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "aud",
                    "type": "character varying(255)",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "role",
                    "type": "character varying(255)",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "email",
                    "type": "character varying(255)",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "encrypted_password",
                    "type": "character varying(255)",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "email_confirmed_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "invited_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "confirmation_token",
                    "type": "character varying(255)",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "confirmation_sent_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "recovery_token",
                    "type": "character varying(255)",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "recovery_sent_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "email_change_token_new",
                    "type": "character varying(255)",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "email_change",
                    "type": "character varying(255)",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "email_change_sent_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "last_sign_in_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "raw_app_meta_data",
                    "type": "jsonb",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "raw_user_meta_data",
                    "type": "jsonb",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "is_super_admin",
                    "type": "boolean",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "created_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "updated_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "phone",
                    "type": "text",
                    "comment": null,
                    "default": "NULL::character varying",
                    "nullable": true
                },
                {
                    "name": "phone_confirmed_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "phone_change",
                    "type": "text",
                    "comment": null,
                    "default": "''::character varying",
                    "nullable": true
                },
                {
                    "name": "phone_change_token",
                    "type": "character varying(255)",
                    "comment": null,
                    "default": "''::character varying",
                    "nullable": true
                },
                {
                    "name": "phone_change_sent_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "confirmed_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": "LEAST(email_confirmed_at, phone_confirmed_at)",
                    "nullable": true
                },
                {
                    "name": "email_change_token_current",
                    "type": "character varying(255)",
                    "comment": null,
                    "default": "''::character varying",
                    "nullable": true
                },
                {
                    "name": "email_change_confirm_status",
                    "type": "smallint",
                    "comment": null,
                    "default": "0",
                    "nullable": true
                },
                {
                    "name": "banned_until",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "reauthentication_token",
                    "type": "character varying(255)",
                    "comment": null,
                    "default": "''::character varying",
                    "nullable": true
                },
                {
                    "name": "reauthentication_sent_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "is_sso_user",
                    "type": "boolean",
                    "comment": "Auth: Set this column to true when the account comes from SSO. These accounts can have duplicate emails.",
                    "default": "false",
                    "nullable": false
                },
                {
                    "name": "deleted_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "is_anonymous",
                    "type": "boolean",
                    "comment": null,
                    "default": "false",
                    "nullable": false
                }
            ],
            "comment": "Auth: Stores user login data within a secure schema.",
            "indexes": [
                {
                    "def": "CREATE UNIQUE INDEX users_phone_key ON auth.users USING btree (phone)",
                    "name": "users_phone_key"
                },
                {
                    "def": "CREATE UNIQUE INDEX users_pkey ON auth.users USING btree (id)",
                    "name": "users_pkey"
                },
                {
                    "def": "CREATE UNIQUE INDEX confirmation_token_idx ON auth.users USING btree (confirmation_token) WHERE ((confirmation_token)::text !~ '^[0-9 ]*$'::text)",
                    "name": "confirmation_token_idx"
                },
                {
                    "def": "CREATE UNIQUE INDEX email_change_token_current_idx ON auth.users USING btree (email_change_token_current) WHERE ((email_change_token_current)::text !~ '^[0-9 ]*$'::text)",
                    "name": "email_change_token_current_idx"
                },
                {
                    "def": "CREATE UNIQUE INDEX email_change_token_new_idx ON auth.users USING btree (email_change_token_new) WHERE ((email_change_token_new)::text !~ '^[0-9 ]*$'::text)",
                    "name": "email_change_token_new_idx"
                },
                {
                    "def": "CREATE UNIQUE INDEX reauthentication_token_idx ON auth.users USING btree (reauthentication_token) WHERE ((reauthentication_token)::text !~ '^[0-9 ]*$'::text)",
                    "name": "reauthentication_token_idx"
                },
                {
                    "def": "CREATE UNIQUE INDEX recovery_token_idx ON auth.users USING btree (recovery_token) WHERE ((recovery_token)::text !~ '^[0-9 ]*$'::text)",
                    "name": "recovery_token_idx"
                },
                {
                    "def": "CREATE UNIQUE INDEX users_email_partial_key ON auth.users USING btree (email) WHERE (is_sso_user = false)",
                    "name": "users_email_partial_key"
                },
                {
                    "def": "CREATE INDEX users_instance_id_email_idx ON auth.users USING btree (instance_id, lower((email)::text))",
                    "name": "users_instance_id_email_idx"
                },
                {
                    "def": "CREATE INDEX users_instance_id_idx ON auth.users USING btree (instance_id)",
                    "name": "users_instance_id_idx"
                },
                {
                    "def": "CREATE INDEX users_is_anonymous_idx ON auth.users USING btree (is_anonymous)",
                    "name": "users_is_anonymous_idx"
                }
            ],
            "policies": [
            ],
            "primary_key": [
                "id"
            ],
            "foreign_keys": [
            ]
        },
        {
            "table": "ai_suggestions",
            "schema": "public",
            "columns": [
                {
                    "name": "id",
                    "type": "uuid",
                    "comment": null,
                    "default": "gen_random_uuid()",
                    "nullable": false
                },
                {
                    "name": "event_id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "name",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "category",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "score",
                    "type": "numeric",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "created_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": "now()",
                    "nullable": false
                }
            ],
            "comment": null,
            "indexes": [
                {
                    "def": "CREATE UNIQUE INDEX ai_suggestions_pkey ON public.ai_suggestions USING btree (id)",
                    "name": "ai_suggestions_pkey"
                }
            ],
            "policies": [
            ],
            "primary_key": [
                "id"
            ],
            "foreign_keys": [
                {
                    "name": "ai_suggestions_event_id_fkey",
                    "delete": "c",
                    "update": "a",
                    "columns": [
                        "event_id"
                    ],
                    "references": {
                        "table": "events",
                        "schema": "public",
                        "columns": [
                            "id"
                        ]
                    }
                }
            ]
        },
        {
            "table": "billing_plans",
            "schema": "public",
            "columns": [
                {
                    "name": "id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "name",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "amount_cents",
                    "type": "integer",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "currency",
                    "type": "text",
                    "comment": null,
                    "default": "'usd'::text",
                    "nullable": false
                },
                {
                    "name": "interval",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "is_active",
                    "type": "boolean",
                    "comment": null,
                    "default": "true",
                    "nullable": false
                },
                {
                    "name": "created_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": "now()",
                    "nullable": true
                },
                {
                    "name": "price_id",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "provider",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "external_id",
                    "type": "character varying(255)",
                    "comment": null,
                    "default": null,
                    "nullable": true
                }
            ],
            "comment": null,
            "indexes": [
                {
                    "def": "CREATE UNIQUE INDEX billing_plans_pkey ON public.billing_plans USING btree (id)",
                    "name": "billing_plans_pkey"
                },
                {
                    "def": "CREATE UNIQUE INDEX billing_plans_price_id_key ON public.billing_plans USING btree (price_id)",
                    "name": "billing_plans_price_id_key"
                },
                {
                    "def": "CREATE UNIQUE INDEX billing_plans_provider_price_id_uk ON public.billing_plans USING btree (provider, price_id)",
                    "name": "billing_plans_provider_price_id_uk"
                },
                {
                    "def": "CREATE INDEX idx_billing_plans_provider ON public.billing_plans USING btree (provider)",
                    "name": "idx_billing_plans_provider"
                },
                {
                    "def": "CREATE INDEX idx_billing_plans_external_id ON public.billing_plans USING btree (external_id)",
                    "name": "idx_billing_plans_external_id"
                }
            ],
            "policies": [
            ],
            "primary_key": [
                "id"
            ],
            "foreign_keys": [
            ]
        },
        {
            "table": "device_tokens",
            "schema": "public",
            "columns": [
                {
                    "name": "id",
                    "type": "uuid",
                    "comment": null,
                    "default": "gen_random_uuid()",
                    "nullable": false
                },
                {
                    "name": "user_id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "token",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "platform",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "created_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": "now()",
                    "nullable": false
                }
            ],
            "comment": null,
            "indexes": [
                {
                    "def": "CREATE UNIQUE INDEX device_tokens_pkey ON public.device_tokens USING btree (id)",
                    "name": "device_tokens_pkey"
                }
            ],
            "policies": [
            ],
            "primary_key": [
                "id"
            ],
            "foreign_keys": [
                {
                    "name": "device_tokens_user_id_fkey",
                    "delete": "c",
                    "update": "a",
                    "columns": [
                        "user_id"
                    ],
                    "references": {
                        "table": "user_profiles",
                        "schema": "public",
                        "columns": [
                            "id"
                        ]
                    }
                }
            ]
        },
        {
            "table": "dietary_options",
            "schema": "public",
            "columns": [
                {
                    "name": "id",
                    "type": "uuid",
                    "comment": null,
                    "default": "gen_random_uuid()",
                    "nullable": false
                },
                {
                    "name": "name",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "created_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": "now()",
                    "nullable": false
                }
            ],
            "comment": null,
            "indexes": [
                {
                    "def": "CREATE UNIQUE INDEX dietary_options_name_key ON public.dietary_options USING btree (name)",
                    "name": "dietary_options_name_key"
                },
                {
                    "def": "CREATE UNIQUE INDEX dietary_options_pkey ON public.dietary_options USING btree (id)",
                    "name": "dietary_options_pkey"
                }
            ],
            "policies": [
            ],
            "primary_key": [
                "id"
            ],
            "foreign_keys": [
            ]
        },
        {
            "table": "event_expenses",
            "schema": "public",
            "columns": [
                {
                    "name": "id",
                    "type": "uuid",
                    "comment": null,
                    "default": "gen_random_uuid()",
                    "nullable": false
                },
                {
                    "name": "event_id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "description",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "total_amount_cents",
                    "type": "integer",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "created_by",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "created_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": "now()",
                    "nullable": false
                }
            ],
            "comment": null,
            "indexes": [
                {
                    "def": "CREATE UNIQUE INDEX event_expenses_pkey ON public.event_expenses USING btree (id)",
                    "name": "event_expenses_pkey"
                }
            ],
            "policies": [
            ],
            "primary_key": [
                "id"
            ],
            "foreign_keys": [
                {
                    "name": "event_expenses_created_by_fkey",
                    "delete": "a",
                    "update": "a",
                    "columns": [
                        "created_by"
                    ],
                    "references": {
                        "table": "user_profiles",
                        "schema": "public",
                        "columns": [
                            "id"
                        ]
                    }
                },
                {
                    "name": "event_expenses_event_id_fkey",
                    "delete": "c",
                    "update": "a",
                    "columns": [
                        "event_id"
                    ],
                    "references": {
                        "table": "events",
                        "schema": "public",
                        "columns": [
                            "id"
                        ]
                    }
                }
            ]
        },
        {
            "table": "event_feedback",
            "schema": "public",
            "columns": [
                {
                    "name": "id",
                    "type": "uuid",
                    "comment": null,
                    "default": "gen_random_uuid()",
                    "nullable": false
                },
                {
                    "name": "event_id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "user_id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "rating",
                    "type": "smallint",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "comments",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "created_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": "now()",
                    "nullable": false
                }
            ],
            "comment": null,
            "indexes": [
                {
                    "def": "CREATE UNIQUE INDEX event_feedback_event_id_user_id_key ON public.event_feedback USING btree (event_id, user_id)",
                    "name": "event_feedback_event_id_user_id_key"
                },
                {
                    "def": "CREATE UNIQUE INDEX event_feedback_pkey ON public.event_feedback USING btree (id)",
                    "name": "event_feedback_pkey"
                }
            ],
            "policies": [
            ],
            "primary_key": [
                "id"
            ],
            "foreign_keys": [
                {
                    "name": "event_feedback_event_id_fkey",
                    "delete": "c",
                    "update": "a",
                    "columns": [
                        "event_id"
                    ],
                    "references": {
                        "table": "events",
                        "schema": "public",
                        "columns": [
                            "id"
                        ]
                    }
                },
                {
                    "name": "event_feedback_user_id_fkey",
                    "delete": "a",
                    "update": "a",
                    "columns": [
                        "user_id"
                    ],
                    "references": {
                        "table": "user_profiles",
                        "schema": "public",
                        "columns": [
                            "id"
                        ]
                    }
                }
            ]
        },
        {
            "table": "event_items",
            "schema": "public",
            "columns": [
                {
                    "name": "id",
                    "type": "uuid",
                    "comment": null,
                    "default": "gen_random_uuid()",
                    "nullable": false
                },
                {
                    "name": "event_id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "name",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "created_by",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "assigned_to",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "created_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": "now()",
                    "nullable": false
                },
                {
                    "name": "updated_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": "now()",
                    "nullable": false
                },
                {
                    "name": "category",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "per_guest_qty",
                    "type": "numeric(6,2)",
                    "comment": null,
                    "default": "1.0",
                    "nullable": false
                },
                {
                    "name": "required_qty",
                    "type": "numeric(8,2)",
                    "comment": null,
                    "default": "1.0",
                    "nullable": false
                },
                {
                    "name": "catalog_item_id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "user_item_id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": true
                }
            ],
            "comment": null,
            "indexes": [
                {
                    "def": "CREATE UNIQUE INDEX event_items_pkey ON public.event_items USING btree (id)",
                    "name": "event_items_pkey"
                },
                {
                    "def": "CREATE INDEX idx_event_items_catalog ON public.event_items USING btree (catalog_item_id)",
                    "name": "idx_event_items_catalog"
                },
                {
                    "def": "CREATE INDEX idx_event_items_user_item ON public.event_items USING btree (user_item_id)",
                    "name": "idx_event_items_user_item"
                }
            ],
            "policies": [
                {
                    "cmd": "SELECT",
                    "name": "debug allow all",
                    "check": null,
                    "roles": [
                        "public"
                    ],
                    "using": "true"
                }
            ],
            "primary_key": [
                "id"
            ],
            "foreign_keys": [
                {
                    "name": "event_items_assigned_to_fkey",
                    "delete": "a",
                    "update": "a",
                    "columns": [
                        "assigned_to"
                    ],
                    "references": {
                        "table": "user_profiles",
                        "schema": "public",
                        "columns": [
                            "id"
                        ]
                    }
                },
                {
                    "name": "event_items_catalog_item_id_fkey",
                    "delete": "n",
                    "update": "a",
                    "columns": [
                        "catalog_item_id"
                    ],
                    "references": {
                        "table": "item_catalog",
                        "schema": "public",
                        "columns": [
                            "id"
                        ]
                    }
                },
                {
                    "name": "event_items_created_by_fkey",
                    "delete": "a",
                    "update": "a",
                    "columns": [
                        "created_by"
                    ],
                    "references": {
                        "table": "user_profiles",
                        "schema": "public",
                        "columns": [
                            "id"
                        ]
                    }
                },
                {
                    "name": "event_items_event_id_fkey",
                    "delete": "c",
                    "update": "a",
                    "columns": [
                        "event_id"
                    ],
                    "references": {
                        "table": "events",
                        "schema": "public",
                        "columns": [
                            "id"
                        ]
                    }
                },
                {
                    "name": "event_items_user_item_id_fkey",
                    "delete": "n",
                    "update": "a",
                    "columns": [
                        "user_item_id"
                    ],
                    "references": {
                        "table": "user_items",
                        "schema": "public",
                        "columns": [
                            "id"
                        ]
                    }
                }
            ]
        },
        {
            "table": "event_join_requests",
            "schema": "public",
            "columns": [
                {
                    "name": "id",
                    "type": "uuid",
                    "comment": null,
                    "default": "gen_random_uuid()",
                    "nullable": false
                },
                {
                    "name": "event_id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "user_id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "party_size",
                    "type": "integer",
                    "comment": "Number of people in the requesting party",
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "note",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "status",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "hold_expires_at",
                    "type": "timestamp with time zone",
                    "comment": "When the capacity hold expires (for pending requests only)",
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "created_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": "now()",
                    "nullable": false
                },
                {
                    "name": "updated_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": "now()",
                    "nullable": false
                },
                {
                    "name": "waitlist_pos",
                    "type": "numeric",
                    "comment": null,
                    "default": null,
                    "nullable": true
                }
            ],
            "comment": "Join requests for events with capacity holds",
            "indexes": [
                {
                    "def": "CREATE UNIQUE INDEX event_join_requests_pkey ON public.event_join_requests USING btree (id)",
                    "name": "event_join_requests_pkey"
                },
                {
                    "def": "CREATE INDEX idx_join_requests_event_status ON public.event_join_requests USING btree (event_id, status)",
                    "name": "idx_join_requests_event_status"
                },
                {
                    "def": "CREATE INDEX idx_join_requests_hold_expires ON public.event_join_requests USING btree (hold_expires_at) WHERE ((status = 'pending'::text) AND (hold_expires_at IS NOT NULL))",
                    "name": "idx_join_requests_hold_expires"
                },
                {
                    "def": "CREATE INDEX idx_join_requests_user ON public.event_join_requests USING btree (user_id)",
                    "name": "idx_join_requests_user"
                },
                {
                    "def": "CREATE UNIQUE INDEX idx_join_requests_unique_pending ON public.event_join_requests USING btree (event_id, user_id) WHERE (status = 'pending'::text)",
                    "name": "idx_join_requests_unique_pending"
                },
                {
                    "def": "CREATE INDEX idx_join_requests_waitlist ON public.event_join_requests USING btree (event_id, status, waitlist_pos, created_at)",
                    "name": "idx_join_requests_waitlist"
                }
            ],
            "policies": [
            ],
            "primary_key": [
                "id"
            ],
            "foreign_keys": [
                {
                    "name": "event_join_requests_event_id_fkey",
                    "delete": "c",
                    "update": "a",
                    "columns": [
                        "event_id"
                    ],
                    "references": {
                        "table": "events",
                        "schema": "public",
                        "columns": [
                            "id"
                        ]
                    }
                },
                {
                    "name": "event_join_requests_user_id_fkey",
                    "delete": "c",
                    "update": "a",
                    "columns": [
                        "user_id"
                    ],
                    "references": {
                        "table": "users",
                        "schema": "auth",
                        "columns": [
                            "id"
                        ]
                    }
                }
            ]
        },
        {
            "table": "event_participants",
            "schema": "public",
            "columns": [
                {
                    "name": "id",
                    "type": "uuid",
                    "comment": null,
                    "default": "gen_random_uuid()",
                    "nullable": false
                },
                {
                    "name": "event_id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "user_id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "status",
                    "type": "rsvp_status",
                    "comment": null,
                    "default": "'pending'::rsvp_status",
                    "nullable": false
                },
                {
                    "name": "joined_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": "now()",
                    "nullable": false
                },
                {
                    "name": "role",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "party_size",
                    "type": "integer",
                    "comment": null,
                    "default": "1",
                    "nullable": false
                }
            ],
            "comment": null,
            "indexes": [
                {
                    "def": "CREATE UNIQUE INDEX event_participants_event_id_user_id_key ON public.event_participants USING btree (event_id, user_id)",
                    "name": "event_participants_event_id_user_id_key"
                },
                {
                    "def": "CREATE UNIQUE INDEX event_participants_pkey ON public.event_participants USING btree (id)",
                    "name": "event_participants_pkey"
                }
            ],
            "policies": [
                {
                    "cmd": "INSERT",
                    "name": "Anyone can RSVP self",
                    "check": "(user_id = auth.uid())",
                    "roles": [
                        "public"
                    ],
                    "using": null
                },
                {
                    "cmd": "INSERT",
                    "name": "Host can invite others",
                    "check": "(EXISTS ( SELECT 1\n   FROM events\n  WHERE ((events.id = event_participants.event_id) AND (events.created_by = auth.uid()))))",
                    "roles": [
                        "public"
                    ],
                    "using": null
                },
                {
                    "cmd": "SELECT",
                    "name": "debug allow all",
                    "check": null,
                    "roles": [
                        "public"
                    ],
                    "using": "true"
                }
            ],
            "primary_key": [
                "id"
            ],
            "foreign_keys": [
                {
                    "name": "event_participants_event_id_fkey",
                    "delete": "c",
                    "update": "a",
                    "columns": [
                        "event_id"
                    ],
                    "references": {
                        "table": "events",
                        "schema": "public",
                        "columns": [
                            "id"
                        ]
                    }
                },
                {
                    "name": "event_participants_user_id_fkey",
                    "delete": "c",
                    "update": "a",
                    "columns": [
                        "user_id"
                    ],
                    "references": {
                        "table": "user_profiles",
                        "schema": "public",
                        "columns": [
                            "id"
                        ]
                    }
                }
            ]
        },
        {
            "table": "event_payments",
            "schema": "public",
            "columns": [
                {
                    "name": "id",
                    "type": "uuid",
                    "comment": null,
                    "default": "gen_random_uuid()",
                    "nullable": false
                },
                {
                    "name": "event_id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "user_id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "amount_cents",
                    "type": "integer",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "currency",
                    "type": "text",
                    "comment": null,
                    "default": "'usd'::text",
                    "nullable": false
                },
                {
                    "name": "status",
                    "type": "payment_status",
                    "comment": null,
                    "default": "'pending'::payment_status",
                    "nullable": false
                },
                {
                    "name": "stripe_payment_intent",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "created_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": "now()",
                    "nullable": true
                }
            ],
            "comment": null,
            "indexes": [
                {
                    "def": "CREATE UNIQUE INDEX event_payments_event_id_user_id_key ON public.event_payments USING btree (event_id, user_id)",
                    "name": "event_payments_event_id_user_id_key"
                },
                {
                    "def": "CREATE UNIQUE INDEX event_payments_pkey ON public.event_payments USING btree (id)",
                    "name": "event_payments_pkey"
                },
                {
                    "def": "CREATE UNIQUE INDEX event_payments_stripe_payment_intent_key ON public.event_payments USING btree (stripe_payment_intent)",
                    "name": "event_payments_stripe_payment_intent_key"
                },
                {
                    "def": "CREATE INDEX idx_payments_event ON public.event_payments USING btree (event_id)",
                    "name": "idx_payments_event"
                }
            ],
            "policies": [
            ],
            "primary_key": [
                "id"
            ],
            "foreign_keys": [
                {
                    "name": "event_payments_event_id_fkey",
                    "delete": "c",
                    "update": "a",
                    "columns": [
                        "event_id"
                    ],
                    "references": {
                        "table": "events",
                        "schema": "public",
                        "columns": [
                            "id"
                        ]
                    }
                },
                {
                    "name": "event_payments_user_id_fkey",
                    "delete": "c",
                    "update": "a",
                    "columns": [
                        "user_id"
                    ],
                    "references": {
                        "table": "users",
                        "schema": "auth",
                        "columns": [
                            "id"
                        ]
                    }
                }
            ]
        },
        {
            "table": "event_photos",
            "schema": "public",
            "columns": [
                {
                    "name": "id",
                    "type": "uuid",
                    "comment": null,
                    "default": "gen_random_uuid()",
                    "nullable": false
                },
                {
                    "name": "event_id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "uploaded_by",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "url",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "metadata",
                    "type": "jsonb",
                    "comment": null,
                    "default": "'{}'::jsonb",
                    "nullable": true
                },
                {
                    "name": "created_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": "now()",
                    "nullable": false
                }
            ],
            "comment": null,
            "indexes": [
                {
                    "def": "CREATE UNIQUE INDEX event_photos_pkey ON public.event_photos USING btree (id)",
                    "name": "event_photos_pkey"
                }
            ],
            "policies": [
            ],
            "primary_key": [
                "id"
            ],
            "foreign_keys": [
                {
                    "name": "event_photos_event_id_fkey",
                    "delete": "c",
                    "update": "a",
                    "columns": [
                        "event_id"
                    ],
                    "references": {
                        "table": "events",
                        "schema": "public",
                        "columns": [
                            "id"
                        ]
                    }
                },
                {
                    "name": "event_photos_uploaded_by_fkey",
                    "delete": "a",
                    "update": "a",
                    "columns": [
                        "uploaded_by"
                    ],
                    "references": {
                        "table": "user_profiles",
                        "schema": "public",
                        "columns": [
                            "id"
                        ]
                    }
                }
            ]
        },
        {
            "table": "events",
            "schema": "public",
            "columns": [
                {
                    "name": "id",
                    "type": "uuid",
                    "comment": null,
                    "default": "gen_random_uuid()",
                    "nullable": false
                },
                {
                    "name": "created_by",
                    "type": "uuid",
                    "comment": null,
                    "default": "auth.uid()",
                    "nullable": false
                },
                {
                    "name": "title",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "description",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "event_date",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "settings",
                    "type": "jsonb",
                    "comment": null,
                    "default": "'{}'::jsonb",
                    "nullable": false
                },
                {
                    "name": "created_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": "now()",
                    "nullable": false
                },
                {
                    "name": "updated_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": "now()",
                    "nullable": false
                },
                {
                    "name": "location_id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "min_guests",
                    "type": "integer",
                    "comment": null,
                    "default": "1",
                    "nullable": false
                },
                {
                    "name": "max_guests",
                    "type": "integer",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "meal_type",
                    "type": "meal_type",
                    "comment": null,
                    "default": "'mixed'::meal_type",
                    "nullable": false
                },
                {
                    "name": "attendee_count",
                    "type": "integer",
                    "comment": null,
                    "default": "0",
                    "nullable": false
                },
                {
                    "name": "status",
                    "type": "event_status",
                    "comment": null,
                    "default": "'draft'::event_status",
                    "nullable": false
                },
                {
                    "name": "published_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "cancelled_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "completed_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "deleted_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "cancel_reason",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "capacity_total",
                    "type": "integer",
                    "comment": null,
                    "default": "20",
                    "nullable": false
                },
                {
                    "name": "is_public",
                    "type": "boolean",
                    "comment": null,
                    "default": "false",
                    "nullable": true
                }
            ],
            "comment": null,
            "indexes": [
                {
                    "def": "CREATE UNIQUE INDEX events_pkey ON public.events USING btree (id)",
                    "name": "events_pkey"
                }
            ],
            "policies": [
                {
                    "cmd": "SELECT",
                    "name": "debug allow all",
                    "check": null,
                    "roles": [
                        "public"
                    ],
                    "using": "true"
                }
            ],
            "primary_key": [
                "id"
            ],
            "foreign_keys": [
                {
                    "name": "events_created_by_fkey",
                    "delete": "c",
                    "update": "a",
                    "columns": [
                        "created_by"
                    ],
                    "references": {
                        "table": "user_profiles",
                        "schema": "public",
                        "columns": [
                            "id"
                        ]
                    }
                },
                {
                    "name": "events_location_id_fkey",
                    "delete": "a",
                    "update": "a",
                    "columns": [
                        "location_id"
                    ],
                    "references": {
                        "table": "locations",
                        "schema": "public",
                        "columns": [
                            "id"
                        ]
                    }
                }
            ]
        },
        {
            "table": "expense_shares",
            "schema": "public",
            "columns": [
                {
                    "name": "id",
                    "type": "uuid",
                    "comment": null,
                    "default": "gen_random_uuid()",
                    "nullable": false
                },
                {
                    "name": "expense_id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "user_id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "share_amount_cents",
                    "type": "integer",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "paid",
                    "type": "boolean",
                    "comment": null,
                    "default": "false",
                    "nullable": false
                },
                {
                    "name": "paid_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": null,
                    "nullable": true
                }
            ],
            "comment": null,
            "indexes": [
                {
                    "def": "CREATE UNIQUE INDEX expense_shares_expense_id_user_id_key ON public.expense_shares USING btree (expense_id, user_id)",
                    "name": "expense_shares_expense_id_user_id_key"
                },
                {
                    "def": "CREATE UNIQUE INDEX expense_shares_pkey ON public.expense_shares USING btree (id)",
                    "name": "expense_shares_pkey"
                }
            ],
            "policies": [
            ],
            "primary_key": [
                "id"
            ],
            "foreign_keys": [
                {
                    "name": "expense_shares_expense_id_fkey",
                    "delete": "c",
                    "update": "a",
                    "columns": [
                        "expense_id"
                    ],
                    "references": {
                        "table": "event_expenses",
                        "schema": "public",
                        "columns": [
                            "id"
                        ]
                    }
                },
                {
                    "name": "expense_shares_user_id_fkey",
                    "delete": "c",
                    "update": "a",
                    "columns": [
                        "user_id"
                    ],
                    "references": {
                        "table": "user_profiles",
                        "schema": "public",
                        "columns": [
                            "id"
                        ]
                    }
                }
            ]
        },
        {
            "table": "idempotency_keys",
            "schema": "public",
            "columns": [
                {
                    "name": "key",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "result_hash",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "created_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": "now()",
                    "nullable": false
                }
            ],
            "comment": null,
            "indexes": [
                {
                    "def": "CREATE UNIQUE INDEX idempotency_keys_pkey ON public.idempotency_keys USING btree (key)",
                    "name": "idempotency_keys_pkey"
                }
            ],
            "policies": [
            ],
            "primary_key": [
                "key"
            ],
            "foreign_keys": [
            ]
        },
        {
            "table": "invoices",
            "schema": "public",
            "columns": [
                {
                    "name": "id",
                    "type": "uuid",
                    "comment": null,
                    "default": "gen_random_uuid()",
                    "nullable": false
                },
                {
                    "name": "subscription_id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "user_id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "invoice_id",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "amount_cents",
                    "type": "integer",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "currency",
                    "type": "text",
                    "comment": null,
                    "default": "'usd'::text",
                    "nullable": false
                },
                {
                    "name": "status",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "invoice_date",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": "now()",
                    "nullable": false
                },
                {
                    "name": "paid_date",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "created_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": "now()",
                    "nullable": false
                },
                {
                    "name": "provider",
                    "type": "text",
                    "comment": null,
                    "default": "'stripe'::text",
                    "nullable": false
                }
            ],
            "comment": null,
            "indexes": [
                {
                    "def": "CREATE UNIQUE INDEX invoices_invoice_id_key ON public.invoices USING btree (invoice_id)",
                    "name": "invoices_invoice_id_key"
                },
                {
                    "def": "CREATE UNIQUE INDEX invoices_pkey ON public.invoices USING btree (id)",
                    "name": "invoices_pkey"
                },
                {
                    "def": "CREATE UNIQUE INDEX invoices_invoice_id_uk ON public.invoices USING btree (invoice_id)",
                    "name": "invoices_invoice_id_uk"
                },
                {
                    "def": "CREATE INDEX idx_invoices_user_id ON public.invoices USING btree (user_id)",
                    "name": "idx_invoices_user_id"
                },
                {
                    "def": "CREATE INDEX idx_invoices_subscription_id ON public.invoices USING btree (subscription_id)",
                    "name": "idx_invoices_subscription_id"
                },
                {
                    "def": "CREATE INDEX idx_invoices_provider ON public.invoices USING btree (provider)",
                    "name": "idx_invoices_provider"
                }
            ],
            "policies": [
            ],
            "primary_key": [
                "id"
            ],
            "foreign_keys": [
                {
                    "name": "invoices_subscription_id_fkey",
                    "delete": "n",
                    "update": "a",
                    "columns": [
                        "subscription_id"
                    ],
                    "references": {
                        "table": "user_subscriptions",
                        "schema": "public",
                        "columns": [
                            "id"
                        ]
                    }
                },
                {
                    "name": "invoices_user_id_fkey",
                    "delete": "c",
                    "update": "a",
                    "columns": [
                        "user_id"
                    ],
                    "references": {
                        "table": "user_profiles",
                        "schema": "public",
                        "columns": [
                            "id"
                        ]
                    }
                }
            ]
        },
        {
            "table": "item_catalog",
            "schema": "public",
            "columns": [
                {
                    "name": "id",
                    "type": "uuid",
                    "comment": null,
                    "default": "gen_random_uuid()",
                    "nullable": false
                },
                {
                    "name": "name",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "category",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "unit",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "default_per_guest_qty",
                    "type": "numeric(6,2)",
                    "comment": null,
                    "default": "1.0",
                    "nullable": false
                },
                {
                    "name": "dietary_tags",
                    "type": "text[]",
                    "comment": null,
                    "default": "'{}'::text[]",
                    "nullable": false
                },
                {
                    "name": "description",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "is_active",
                    "type": "boolean",
                    "comment": null,
                    "default": "true",
                    "nullable": false
                },
                {
                    "name": "created_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": "now()",
                    "nullable": false
                },
                {
                    "name": "updated_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": "now()",
                    "nullable": false
                }
            ],
            "comment": "Global catalog of common potluck items with default attributes",
            "indexes": [
                {
                    "def": "CREATE UNIQUE INDEX item_catalog_pkey ON public.item_catalog USING btree (id)",
                    "name": "item_catalog_pkey"
                },
                {
                    "def": "CREATE UNIQUE INDEX item_catalog_name_cat_unit_uk ON public.item_catalog USING btree (lower(TRIM(BOTH FROM name)), COALESCE(category, ''::text), COALESCE(unit, ''::text))",
                    "name": "item_catalog_name_cat_unit_uk"
                },
                {
                    "def": "CREATE INDEX idx_item_catalog_active ON public.item_catalog USING btree (is_active)",
                    "name": "idx_item_catalog_active"
                }
            ],
            "policies": [
            ],
            "primary_key": [
                "id"
            ],
            "foreign_keys": [
            ]
        },
        {
            "table": "item_categories",
            "schema": "public",
            "columns": [
                {
                    "name": "id",
                    "type": "uuid",
                    "comment": null,
                    "default": "gen_random_uuid()",
                    "nullable": false
                },
                {
                    "name": "name",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "created_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": "now()",
                    "nullable": false
                }
            ],
            "comment": null,
            "indexes": [
                {
                    "def": "CREATE UNIQUE INDEX item_categories_name_key ON public.item_categories USING btree (name)",
                    "name": "item_categories_name_key"
                },
                {
                    "def": "CREATE UNIQUE INDEX item_categories_pkey ON public.item_categories USING btree (id)",
                    "name": "item_categories_pkey"
                }
            ],
            "policies": [
            ],
            "primary_key": [
                "id"
            ],
            "foreign_keys": [
            ]
        },
        {
            "table": "locations",
            "schema": "public",
            "columns": [
                {
                    "name": "id",
                    "type": "uuid",
                    "comment": null,
                    "default": "gen_random_uuid()",
                    "nullable": false
                },
                {
                    "name": "name",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "latitude",
                    "type": "double precision",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "longitude",
                    "type": "double precision",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "created_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": "now()",
                    "nullable": false
                },
                {
                    "name": "updated_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": "now()",
                    "nullable": false
                },
                {
                    "name": "canonical_name",
                    "type": "text",
                    "comment": null,
                    "default": "lower(TRIM(BOTH FROM name))",
                    "nullable": true
                },
                {
                    "name": "place_id",
                    "type": "text",
                    "comment": "Stable identifier from an external map/geo service (Google Places, Apple, OSM, etc.)",
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "created_by",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "formatted_address",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "lat6",
                    "type": "numeric(10,6)",
                    "comment": null,
                    "default": "round((latitude)::numeric, 6)",
                    "nullable": true
                },
                {
                    "name": "lon6",
                    "type": "numeric(10,6)",
                    "comment": null,
                    "default": "round((longitude)::numeric, 6)",
                    "nullable": true
                }
            ],
            "comment": null,
            "indexes": [
                {
                    "def": "CREATE UNIQUE INDEX locations_pkey ON public.locations USING btree (id)",
                    "name": "locations_pkey"
                },
                {
                    "def": "CREATE UNIQUE INDEX uniq_locations_grid_name ON public.locations USING btree (lat6, lon6, canonical_name)",
                    "name": "uniq_locations_grid_name"
                },
                {
                    "def": "CREATE UNIQUE INDEX uniq_locations_lat_lon_name ON public.locations USING btree (lat6, lon6, canonical_name)",
                    "name": "uniq_locations_lat_lon_name"
                },
                {
                    "def": "CREATE UNIQUE INDEX uniq_locations_placeid ON public.locations USING btree (place_id)",
                    "name": "uniq_locations_placeid"
                }
            ],
            "policies": [
                {
                    "cmd": "SELECT",
                    "name": "debug allow all",
                    "check": null,
                    "roles": [
                        "public"
                    ],
                    "using": "true"
                }
            ],
            "primary_key": [
                "id"
            ],
            "foreign_keys": [
            ]
        },
        {
            "table": "notification_channels",
            "schema": "public",
            "columns": [
                {
                    "name": "id",
                    "type": "uuid",
                    "comment": null,
                    "default": "gen_random_uuid()",
                    "nullable": false
                },
                {
                    "name": "name",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "created_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": "now()",
                    "nullable": false
                }
            ],
            "comment": null,
            "indexes": [
                {
                    "def": "CREATE UNIQUE INDEX notification_channels_name_key ON public.notification_channels USING btree (name)",
                    "name": "notification_channels_name_key"
                },
                {
                    "def": "CREATE UNIQUE INDEX notification_channels_pkey ON public.notification_channels USING btree (id)",
                    "name": "notification_channels_pkey"
                }
            ],
            "policies": [
            ],
            "primary_key": [
                "id"
            ],
            "foreign_keys": [
            ]
        },
        {
            "table": "notification_preferences",
            "schema": "public",
            "columns": [
                {
                    "name": "user_id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "push_enabled",
                    "type": "boolean",
                    "comment": null,
                    "default": "false",
                    "nullable": false
                },
                {
                    "name": "email_enabled",
                    "type": "boolean",
                    "comment": null,
                    "default": "false",
                    "nullable": false
                },
                {
                    "name": "in_app_enabled",
                    "type": "boolean",
                    "comment": null,
                    "default": "true",
                    "nullable": false
                },
                {
                    "name": "invite_received",
                    "type": "boolean",
                    "comment": null,
                    "default": "true",
                    "nullable": false
                },
                {
                    "name": "request_approved",
                    "type": "boolean",
                    "comment": null,
                    "default": "true",
                    "nullable": false
                },
                {
                    "name": "request_declined",
                    "type": "boolean",
                    "comment": null,
                    "default": "true",
                    "nullable": false
                },
                {
                    "name": "request_waitlisted",
                    "type": "boolean",
                    "comment": null,
                    "default": "true",
                    "nullable": false
                },
                {
                    "name": "event_updated",
                    "type": "boolean",
                    "comment": null,
                    "default": "true",
                    "nullable": false
                },
                {
                    "name": "event_cancelled",
                    "type": "boolean",
                    "comment": null,
                    "default": "true",
                    "nullable": false
                },
                {
                    "name": "reminder",
                    "type": "boolean",
                    "comment": null,
                    "default": "true",
                    "nullable": false
                },
                {
                    "name": "item_unclaimed",
                    "type": "boolean",
                    "comment": null,
                    "default": "true",
                    "nullable": false
                },
                {
                    "name": "updated_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": "now()",
                    "nullable": false
                }
            ],
            "comment": "Per-user notification channel and type preferences",
            "indexes": [
                {
                    "def": "CREATE UNIQUE INDEX notification_preferences_pkey ON public.notification_preferences USING btree (user_id)",
                    "name": "notification_preferences_pkey"
                }
            ],
            "policies": [
                {
                    "cmd": "SELECT",
                    "name": "Owner can select prefs",
                    "check": null,
                    "roles": [
                        "public"
                    ],
                    "using": "(auth.uid() = user_id)"
                },
                {
                    "cmd": "UPDATE",
                    "name": "Owner can update prefs",
                    "check": null,
                    "roles": [
                        "public"
                    ],
                    "using": "(auth.uid() = user_id)"
                },
                {
                    "cmd": "INSERT",
                    "name": "Owner can upsert prefs",
                    "check": "(auth.uid() = user_id)",
                    "roles": [
                        "public"
                    ],
                    "using": null
                }
            ],
            "primary_key": [
                "user_id"
            ],
            "foreign_keys": [
                {
                    "name": "notification_preferences_user_id_fkey",
                    "delete": "c",
                    "update": "a",
                    "columns": [
                        "user_id"
                    ],
                    "references": {
                        "table": "users",
                        "schema": "auth",
                        "columns": [
                            "id"
                        ]
                    }
                }
            ]
        },
        {
            "table": "notifications",
            "schema": "public",
            "columns": [
                {
                    "name": "id",
                    "type": "uuid",
                    "comment": null,
                    "default": "gen_random_uuid()",
                    "nullable": false
                },
                {
                    "name": "user_id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "type",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "payload",
                    "type": "jsonb",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "is_read",
                    "type": "boolean",
                    "comment": null,
                    "default": "false",
                    "nullable": false
                },
                {
                    "name": "created_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": "now()",
                    "nullable": false
                },
                {
                    "name": "read_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "updated_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": "now()",
                    "nullable": false
                },
                {
                    "name": "event_id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "priority",
                    "type": "smallint",
                    "comment": null,
                    "default": "0",
                    "nullable": false
                },
                {
                    "name": "actor_user_id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "item_id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "delivered_channels",
                    "type": "jsonb",
                    "comment": null,
                    "default": "'[]'::jsonb",
                    "nullable": false
                }
            ],
            "comment": null,
            "indexes": [
                {
                    "def": "CREATE UNIQUE INDEX notifications_pkey ON public.notifications USING btree (id)",
                    "name": "notifications_pkey"
                },
                {
                    "def": "CREATE INDEX idx_notifications_user_id ON public.notifications USING btree (user_id)",
                    "name": "idx_notifications_user_id"
                },
                {
                    "def": "CREATE INDEX idx_notifications_user_unread ON public.notifications USING btree (user_id, read_at) WHERE (read_at IS NULL)",
                    "name": "idx_notifications_user_unread"
                },
                {
                    "def": "CREATE INDEX idx_notifications_created_at ON public.notifications USING btree (created_at DESC)",
                    "name": "idx_notifications_created_at"
                },
                {
                    "def": "CREATE INDEX idx_notifications_event_id ON public.notifications USING btree (event_id)",
                    "name": "idx_notifications_event_id"
                },
                {
                    "def": "CREATE INDEX idx_notifications_user_created_at_desc ON public.notifications USING btree (user_id, created_at DESC)",
                    "name": "idx_notifications_user_created_at_desc"
                }
            ],
            "policies": [
                {
                    "cmd": "INSERT",
                    "name": "Service role can insert notifications",
                    "check": "true",
                    "roles": [
                        "public"
                    ],
                    "using": null
                },
                {
                    "cmd": "SELECT",
                    "name": "Users can read own notifications",
                    "check": null,
                    "roles": [
                        "public"
                    ],
                    "using": "(auth.uid() = user_id)"
                },
                {
                    "cmd": "UPDATE",
                    "name": "Users can update own notifications",
                    "check": null,
                    "roles": [
                        "public"
                    ],
                    "using": "(auth.uid() = user_id)"
                }
            ],
            "primary_key": [
                "id"
            ],
            "foreign_keys": [
                {
                    "name": "notifications_actor_user_id_fkey",
                    "delete": "n",
                    "update": "a",
                    "columns": [
                        "actor_user_id"
                    ],
                    "references": {
                        "table": "users",
                        "schema": "auth",
                        "columns": [
                            "id"
                        ]
                    }
                },
                {
                    "name": "notifications_event_id_fkey",
                    "delete": "c",
                    "update": "a",
                    "columns": [
                        "event_id"
                    ],
                    "references": {
                        "table": "events",
                        "schema": "public",
                        "columns": [
                            "id"
                        ]
                    }
                },
                {
                    "name": "notifications_item_id_fkey",
                    "delete": "n",
                    "update": "a",
                    "columns": [
                        "item_id"
                    ],
                    "references": {
                        "table": "event_items",
                        "schema": "public",
                        "columns": [
                            "id"
                        ]
                    }
                },
                {
                    "name": "notifications_user_id_fkey",
                    "delete": "c",
                    "update": "a",
                    "columns": [
                        "user_id"
                    ],
                    "references": {
                        "table": "user_profiles",
                        "schema": "public",
                        "columns": [
                            "id"
                        ]
                    }
                }
            ]
        },
        {
            "table": "payment_methods",
            "schema": "public",
            "columns": [
                {
                    "name": "id",
                    "type": "uuid",
                    "comment": null,
                    "default": "gen_random_uuid()",
                    "nullable": false
                },
                {
                    "name": "user_id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "provider",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "method_id",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "is_default",
                    "type": "boolean",
                    "comment": null,
                    "default": "false",
                    "nullable": false
                },
                {
                    "name": "created_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": "now()",
                    "nullable": false
                },
                {
                    "name": "brand",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "last_four",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "exp_month",
                    "type": "integer",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "exp_year",
                    "type": "integer",
                    "comment": null,
                    "default": null,
                    "nullable": true
                }
            ],
            "comment": null,
            "indexes": [
                {
                    "def": "CREATE UNIQUE INDEX payment_methods_pkey ON public.payment_methods USING btree (id)",
                    "name": "payment_methods_pkey"
                },
                {
                    "def": "CREATE UNIQUE INDEX payment_methods_provider_method_id_uk ON public.payment_methods USING btree (provider, method_id)",
                    "name": "payment_methods_provider_method_id_uk"
                },
                {
                    "def": "CREATE INDEX idx_payment_methods_user_id ON public.payment_methods USING btree (user_id)",
                    "name": "idx_payment_methods_user_id"
                },
                {
                    "def": "CREATE INDEX idx_payment_methods_provider ON public.payment_methods USING btree (provider)",
                    "name": "idx_payment_methods_provider"
                }
            ],
            "policies": [
            ],
            "primary_key": [
                "id"
            ],
            "foreign_keys": [
                {
                    "name": "payment_methods_user_id_fkey",
                    "delete": "c",
                    "update": "a",
                    "columns": [
                        "user_id"
                    ],
                    "references": {
                        "table": "user_profiles",
                        "schema": "public",
                        "columns": [
                            "id"
                        ]
                    }
                }
            ]
        },
        {
            "table": "payments",
            "schema": "public",
            "columns": [
                {
                    "name": "id",
                    "type": "uuid",
                    "comment": null,
                    "default": "gen_random_uuid()",
                    "nullable": false
                },
                {
                    "name": "invoice_id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "provider_transaction_id",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "amount_cents",
                    "type": "integer",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "currency",
                    "type": "text",
                    "comment": null,
                    "default": "'usd'::text",
                    "nullable": false
                },
                {
                    "name": "status",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "paid_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": "now()",
                    "nullable": true
                },
                {
                    "name": "provider",
                    "type": "text",
                    "comment": null,
                    "default": "'stripe'::text",
                    "nullable": false
                },
                {
                    "name": "created_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": "now()",
                    "nullable": true
                }
            ],
            "comment": null,
            "indexes": [
                {
                    "def": "CREATE UNIQUE INDEX payments_pkey ON public.payments USING btree (id)",
                    "name": "payments_pkey"
                },
                {
                    "def": "CREATE UNIQUE INDEX payments_provider_transaction_id_key ON public.payments USING btree (provider_transaction_id)",
                    "name": "payments_provider_transaction_id_key"
                },
                {
                    "def": "CREATE INDEX idx_payments_invoice_id ON public.payments USING btree (invoice_id)",
                    "name": "idx_payments_invoice_id"
                },
                {
                    "def": "CREATE INDEX idx_payments_status ON public.payments USING btree (status)",
                    "name": "idx_payments_status"
                },
                {
                    "def": "CREATE INDEX idx_payments_provider ON public.payments USING btree (provider)",
                    "name": "idx_payments_provider"
                }
            ],
            "policies": [
            ],
            "primary_key": [
                "id"
            ],
            "foreign_keys": [
                {
                    "name": "payments_invoice_id_fkey",
                    "delete": "c",
                    "update": "a",
                    "columns": [
                        "invoice_id"
                    ],
                    "references": {
                        "table": "invoices",
                        "schema": "public",
                        "columns": [
                            "id"
                        ]
                    }
                }
            ]
        },
        {
            "table": "phone_verifications",
            "schema": "public",
            "columns": [
                {
                    "name": "id",
                    "type": "uuid",
                    "comment": null,
                    "default": "gen_random_uuid()",
                    "nullable": false
                },
                {
                    "name": "user_id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "phone_e164",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "code_hash",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "expires_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "attempts",
                    "type": "integer",
                    "comment": null,
                    "default": "0",
                    "nullable": false
                },
                {
                    "name": "created_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": "now()",
                    "nullable": false
                }
            ],
            "comment": null,
            "indexes": [
                {
                    "def": "CREATE UNIQUE INDEX phone_verifications_pkey ON public.phone_verifications USING btree (id)",
                    "name": "phone_verifications_pkey"
                },
                {
                    "def": "CREATE INDEX idx_phone_verif_user ON public.phone_verifications USING btree (user_id)",
                    "name": "idx_phone_verif_user"
                },
                {
                    "def": "CREATE INDEX idx_phone_verif_expires ON public.phone_verifications USING btree (expires_at)",
                    "name": "idx_phone_verif_expires"
                }
            ],
            "policies": [
            ],
            "primary_key": [
                "id"
            ],
            "foreign_keys": [
            ]
        },
        {
            "table": "plans",
            "schema": "public",
            "columns": [
                {
                    "name": "id",
                    "type": "uuid",
                    "comment": null,
                    "default": "gen_random_uuid()",
                    "nullable": false
                },
                {
                    "name": "name",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "price_cents",
                    "type": "integer",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "interval",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "features",
                    "type": "jsonb",
                    "comment": null,
                    "default": "'[]'::jsonb",
                    "nullable": false
                },
                {
                    "name": "created_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": "now()",
                    "nullable": false
                }
            ],
            "comment": null,
            "indexes": [
                {
                    "def": "CREATE UNIQUE INDEX plans_name_key ON public.plans USING btree (name)",
                    "name": "plans_name_key"
                },
                {
                    "def": "CREATE UNIQUE INDEX plans_pkey ON public.plans USING btree (id)",
                    "name": "plans_pkey"
                }
            ],
            "policies": [
            ],
            "primary_key": [
                "id"
            ],
            "foreign_keys": [
            ]
        },
        {
            "table": "push_tokens",
            "schema": "public",
            "columns": [
                {
                    "name": "id",
                    "type": "uuid",
                    "comment": null,
                    "default": "gen_random_uuid()",
                    "nullable": false
                },
                {
                    "name": "user_id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "platform",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "token",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "created_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": "now()",
                    "nullable": false
                },
                {
                    "name": "last_seen_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": "now()",
                    "nullable": false
                }
            ],
            "comment": "Device tokens for push notifications (Expo/Web)",
            "indexes": [
                {
                    "def": "CREATE UNIQUE INDEX push_tokens_pkey ON public.push_tokens USING btree (id)",
                    "name": "push_tokens_pkey"
                },
                {
                    "def": "CREATE UNIQUE INDEX push_tokens_token_key ON public.push_tokens USING btree (token)",
                    "name": "push_tokens_token_key"
                }
            ],
            "policies": [
                {
                    "cmd": "INSERT",
                    "name": "Owner can insert tokens",
                    "check": "(auth.uid() = user_id)",
                    "roles": [
                        "public"
                    ],
                    "using": null
                },
                {
                    "cmd": "SELECT",
                    "name": "Owner can select tokens",
                    "check": null,
                    "roles": [
                        "public"
                    ],
                    "using": "(auth.uid() = user_id)"
                },
                {
                    "cmd": "UPDATE",
                    "name": "Owner can update tokens",
                    "check": null,
                    "roles": [
                        "public"
                    ],
                    "using": "(auth.uid() = user_id)"
                }
            ],
            "primary_key": [
                "id"
            ],
            "foreign_keys": [
                {
                    "name": "push_tokens_user_id_fkey",
                    "delete": "c",
                    "update": "a",
                    "columns": [
                        "user_id"
                    ],
                    "references": {
                        "table": "users",
                        "schema": "auth",
                        "columns": [
                            "id"
                        ]
                    }
                }
            ]
        },
        {
            "table": "spatial_ref_sys",
            "schema": "public",
            "columns": [
                {
                    "name": "srid",
                    "type": "integer",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "auth_name",
                    "type": "character varying(256)",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "auth_srid",
                    "type": "integer",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "srtext",
                    "type": "character varying(2048)",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "proj4text",
                    "type": "character varying(2048)",
                    "comment": null,
                    "default": null,
                    "nullable": true
                }
            ],
            "comment": null,
            "indexes": [
                {
                    "def": "CREATE UNIQUE INDEX spatial_ref_sys_pkey ON public.spatial_ref_sys USING btree (srid)",
                    "name": "spatial_ref_sys_pkey"
                }
            ],
            "policies": [
            ],
            "primary_key": [
                "srid"
            ],
            "foreign_keys": [
            ]
        },
        {
            "table": "user_dietary_preferences",
            "schema": "public",
            "columns": [
                {
                    "name": "user_id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "dietary_option_id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": false
                }
            ],
            "comment": null,
            "indexes": [
                {
                    "def": "CREATE UNIQUE INDEX user_dietary_preferences_pkey ON public.user_dietary_preferences USING btree (user_id, dietary_option_id)",
                    "name": "user_dietary_preferences_pkey"
                }
            ],
            "policies": [
            ],
            "primary_key": [
                "user_id",
                "dietary_option_id"
            ],
            "foreign_keys": [
                {
                    "name": "user_dietary_preferences_dietary_option_id_fkey",
                    "delete": "c",
                    "update": "a",
                    "columns": [
                        "dietary_option_id"
                    ],
                    "references": {
                        "table": "dietary_options",
                        "schema": "public",
                        "columns": [
                            "id"
                        ]
                    }
                },
                {
                    "name": "user_dietary_preferences_user_id_fkey",
                    "delete": "c",
                    "update": "a",
                    "columns": [
                        "user_id"
                    ],
                    "references": {
                        "table": "user_profiles",
                        "schema": "public",
                        "columns": [
                            "id"
                        ]
                    }
                }
            ]
        },
        {
            "table": "user_items",
            "schema": "public",
            "columns": [
                {
                    "name": "id",
                    "type": "uuid",
                    "comment": null,
                    "default": "gen_random_uuid()",
                    "nullable": false
                },
                {
                    "name": "user_id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "name",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "category",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "unit",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "default_per_guest_qty",
                    "type": "numeric(6,2)",
                    "comment": null,
                    "default": "1.0",
                    "nullable": false
                },
                {
                    "name": "dietary_tags",
                    "type": "text[]",
                    "comment": null,
                    "default": "'{}'::text[]",
                    "nullable": false
                },
                {
                    "name": "notes",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "created_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": "now()",
                    "nullable": false
                },
                {
                    "name": "updated_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": "now()",
                    "nullable": false
                }
            ],
            "comment": "Per-user library of frequently used items (templates)",
            "indexes": [
                {
                    "def": "CREATE UNIQUE INDEX user_items_pkey ON public.user_items USING btree (id)",
                    "name": "user_items_pkey"
                },
                {
                    "def": "CREATE UNIQUE INDEX user_items_user_name_cat_unit_uk ON public.user_items USING btree (user_id, lower(TRIM(BOTH FROM name)), COALESCE(category, ''::text), COALESCE(unit, ''::text))",
                    "name": "user_items_user_name_cat_unit_uk"
                },
                {
                    "def": "CREATE INDEX idx_user_items_user ON public.user_items USING btree (user_id)",
                    "name": "idx_user_items_user"
                }
            ],
            "policies": [
            ],
            "primary_key": [
                "id"
            ],
            "foreign_keys": [
                {
                    "name": "user_items_user_id_fkey",
                    "delete": "c",
                    "update": "a",
                    "columns": [
                        "user_id"
                    ],
                    "references": {
                        "table": "users",
                        "schema": "auth",
                        "columns": [
                            "id"
                        ]
                    }
                }
            ]
        },
        {
            "table": "user_notification_preferences",
            "schema": "public",
            "columns": [
                {
                    "name": "user_id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "notification_channel_id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": false
                }
            ],
            "comment": null,
            "indexes": [
                {
                    "def": "CREATE UNIQUE INDEX user_notification_preferences_pkey ON public.user_notification_preferences USING btree (user_id, notification_channel_id)",
                    "name": "user_notification_preferences_pkey"
                }
            ],
            "policies": [
            ],
            "primary_key": [
                "user_id",
                "notification_channel_id"
            ],
            "foreign_keys": [
                {
                    "name": "user_notification_preferences_notification_channel_id_fkey",
                    "delete": "c",
                    "update": "a",
                    "columns": [
                        "notification_channel_id"
                    ],
                    "references": {
                        "table": "notification_channels",
                        "schema": "public",
                        "columns": [
                            "id"
                        ]
                    }
                },
                {
                    "name": "user_notification_preferences_user_id_fkey",
                    "delete": "c",
                    "update": "a",
                    "columns": [
                        "user_id"
                    ],
                    "references": {
                        "table": "user_profiles",
                        "schema": "public",
                        "columns": [
                            "id"
                        ]
                    }
                }
            ]
        },
        {
            "table": "user_profiles",
            "schema": "public",
            "columns": [
                {
                    "name": "id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "display_name",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "avatar_url",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "created_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": "now()",
                    "nullable": false
                },
                {
                    "name": "updated_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": "now()",
                    "nullable": false
                },
                {
                    "name": "home_geog",
                    "type": "geography(Point,4326)",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "discoverability_enabled",
                    "type": "boolean",
                    "comment": null,
                    "default": "true",
                    "nullable": false
                },
                {
                    "name": "discoverability_radius_km",
                    "type": "integer",
                    "comment": null,
                    "default": "25",
                    "nullable": false
                },
                {
                    "name": "city",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "geo_precision",
                    "type": "text",
                    "comment": null,
                    "default": "'city'::text",
                    "nullable": false
                },
                {
                    "name": "user_id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "meal_preferences",
                    "type": "text[]",
                    "comment": "Array of dietary preferences (e.g., vegetarian, vegan, gluten-free)",
                    "default": "'{}'::text[]",
                    "nullable": true
                },
                {
                    "name": "setup_completed",
                    "type": "boolean",
                    "comment": "Flag indicating if user has completed initial profile setup",
                    "default": "false",
                    "nullable": true
                },
                {
                    "name": "phone_e164",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "phone_verified",
                    "type": "boolean",
                    "comment": null,
                    "default": "false",
                    "nullable": false
                }
            ],
            "comment": null,
            "indexes": [
                {
                    "def": "CREATE UNIQUE INDEX profiles_pkey ON public.user_profiles USING btree (id)",
                    "name": "profiles_pkey"
                },
                {
                    "def": "CREATE INDEX idx_user_profiles_home_geog ON public.user_profiles USING gist (home_geog)",
                    "name": "idx_user_profiles_home_geog"
                },
                {
                    "def": "CREATE UNIQUE INDEX uq_user_profiles_user_id ON public.user_profiles USING btree (user_id)",
                    "name": "uq_user_profiles_user_id"
                }
            ],
            "policies": [
            ],
            "primary_key": [
                "id"
            ],
            "foreign_keys": [
                {
                    "name": "profiles_id_fkey",
                    "delete": "c",
                    "update": "a",
                    "columns": [
                        "id"
                    ],
                    "references": {
                        "table": "users",
                        "schema": "auth",
                        "columns": [
                            "id"
                        ]
                    }
                }
            ]
        },
        {
            "table": "user_subscriptions",
            "schema": "public",
            "columns": [
                {
                    "name": "id",
                    "type": "uuid",
                    "comment": null,
                    "default": "gen_random_uuid()",
                    "nullable": false
                },
                {
                    "name": "user_id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "plan_id",
                    "type": "uuid",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "provider_subscription_id",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "status",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "start_date",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "current_period_end",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "cancel_at_period_end",
                    "type": "boolean",
                    "comment": null,
                    "default": "false",
                    "nullable": false
                },
                {
                    "name": "created_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": "now()",
                    "nullable": false
                },
                {
                    "name": "updated_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": "now()",
                    "nullable": false
                },
                {
                    "name": "provider",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "stripe_customer_id",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "trial_start",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "trial_end",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": null,
                    "nullable": true
                }
            ],
            "comment": null,
            "indexes": [
                {
                    "def": "CREATE UNIQUE INDEX user_subscriptions_pkey ON public.user_subscriptions USING btree (id)",
                    "name": "user_subscriptions_pkey"
                },
                {
                    "def": "CREATE UNIQUE INDEX user_subscriptions_stripe_subscription_id_key ON public.user_subscriptions USING btree (provider_subscription_id)",
                    "name": "user_subscriptions_stripe_subscription_id_key"
                },
                {
                    "def": "CREATE UNIQUE INDEX user_subscriptions_provider_subscription_id_uk ON public.user_subscriptions USING btree (provider, provider_subscription_id)",
                    "name": "user_subscriptions_provider_subscription_id_uk"
                },
                {
                    "def": "CREATE INDEX idx_user_subscriptions_user_id ON public.user_subscriptions USING btree (user_id)",
                    "name": "idx_user_subscriptions_user_id"
                },
                {
                    "def": "CREATE INDEX idx_user_subscriptions_status ON public.user_subscriptions USING btree (status)",
                    "name": "idx_user_subscriptions_status"
                },
                {
                    "def": "CREATE INDEX idx_user_subscriptions_provider ON public.user_subscriptions USING btree (provider)",
                    "name": "idx_user_subscriptions_provider"
                },
                {
                    "def": "CREATE INDEX idx_user_subscriptions_provider_id ON public.user_subscriptions USING btree (provider, provider_subscription_id)",
                    "name": "idx_user_subscriptions_provider_id"
                }
            ],
            "policies": [
            ],
            "primary_key": [
                "id"
            ],
            "foreign_keys": [
                {
                    "name": "user_subscriptions_plan_id_fkey",
                    "delete": "r",
                    "update": "a",
                    "columns": [
                        "plan_id"
                    ],
                    "references": {
                        "table": "billing_plans",
                        "schema": "public",
                        "columns": [
                            "id"
                        ]
                    }
                },
                {
                    "name": "user_subscriptions_user_id_fkey",
                    "delete": "c",
                    "update": "a",
                    "columns": [
                        "user_id"
                    ],
                    "references": {
                        "table": "users",
                        "schema": "auth",
                        "columns": [
                            "id"
                        ]
                    }
                }
            ]
        },
        {
            "table": "webhook_events",
            "schema": "public",
            "columns": [
                {
                    "name": "provider",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "event_id",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "processed_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "created_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": "now()",
                    "nullable": false
                }
            ],
            "comment": null,
            "indexes": [
                {
                    "def": "CREATE UNIQUE INDEX webhook_events_pk ON public.webhook_events USING btree (provider, event_id)",
                    "name": "webhook_events_pk"
                }
            ],
            "policies": [
            ],
            "primary_key": [
                "provider",
                "event_id"
            ],
            "foreign_keys": [
            ]
        },
        {
            "table": "buckets",
            "schema": "storage",
            "columns": [
                {
                    "name": "id",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "name",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "owner",
                    "type": "uuid",
                    "comment": "Field is deprecated, use owner_id instead",
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "created_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": "now()",
                    "nullable": true
                },
                {
                    "name": "updated_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": "now()",
                    "nullable": true
                },
                {
                    "name": "public",
                    "type": "boolean",
                    "comment": null,
                    "default": "false",
                    "nullable": true
                },
                {
                    "name": "avif_autodetection",
                    "type": "boolean",
                    "comment": null,
                    "default": "false",
                    "nullable": true
                },
                {
                    "name": "file_size_limit",
                    "type": "bigint",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "allowed_mime_types",
                    "type": "text[]",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "owner_id",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "type",
                    "type": "storage.buckettype",
                    "comment": null,
                    "default": "'STANDARD'::storage.buckettype",
                    "nullable": false
                }
            ],
            "comment": null,
            "indexes": [
                {
                    "def": "CREATE UNIQUE INDEX buckets_pkey ON storage.buckets USING btree (id)",
                    "name": "buckets_pkey"
                },
                {
                    "def": "CREATE UNIQUE INDEX bname ON storage.buckets USING btree (name)",
                    "name": "bname"
                }
            ],
            "policies": [
            ],
            "primary_key": [
                "id"
            ],
            "foreign_keys": [
            ]
        },
        {
            "table": "buckets_analytics",
            "schema": "storage",
            "columns": [
                {
                    "name": "id",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "type",
                    "type": "storage.buckettype",
                    "comment": null,
                    "default": "'ANALYTICS'::storage.buckettype",
                    "nullable": false
                },
                {
                    "name": "format",
                    "type": "text",
                    "comment": null,
                    "default": "'ICEBERG'::text",
                    "nullable": false
                },
                {
                    "name": "created_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": "now()",
                    "nullable": false
                },
                {
                    "name": "updated_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": "now()",
                    "nullable": false
                }
            ],
            "comment": null,
            "indexes": [
                {
                    "def": "CREATE UNIQUE INDEX buckets_analytics_pkey ON storage.buckets_analytics USING btree (id)",
                    "name": "buckets_analytics_pkey"
                }
            ],
            "policies": [
            ],
            "primary_key": [
                "id"
            ],
            "foreign_keys": [
            ]
        },
        {
            "table": "migrations",
            "schema": "storage",
            "columns": [
                {
                    "name": "id",
                    "type": "integer",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "name",
                    "type": "character varying(100)",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "hash",
                    "type": "character varying(40)",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "executed_at",
                    "type": "timestamp without time zone",
                    "comment": null,
                    "default": "CURRENT_TIMESTAMP",
                    "nullable": true
                }
            ],
            "comment": null,
            "indexes": [
                {
                    "def": "CREATE UNIQUE INDEX migrations_name_key ON storage.migrations USING btree (name)",
                    "name": "migrations_name_key"
                },
                {
                    "def": "CREATE UNIQUE INDEX migrations_pkey ON storage.migrations USING btree (id)",
                    "name": "migrations_pkey"
                }
            ],
            "policies": [
            ],
            "primary_key": [
                "id"
            ],
            "foreign_keys": [
            ]
        },
        {
            "table": "objects",
            "schema": "storage",
            "columns": [
                {
                    "name": "id",
                    "type": "uuid",
                    "comment": null,
                    "default": "gen_random_uuid()",
                    "nullable": false
                },
                {
                    "name": "bucket_id",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "name",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "owner",
                    "type": "uuid",
                    "comment": "Field is deprecated, use owner_id instead",
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "created_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": "now()",
                    "nullable": true
                },
                {
                    "name": "updated_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": "now()",
                    "nullable": true
                },
                {
                    "name": "last_accessed_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": "now()",
                    "nullable": true
                },
                {
                    "name": "metadata",
                    "type": "jsonb",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "path_tokens",
                    "type": "text[]",
                    "comment": null,
                    "default": "string_to_array(name, '/'::text)",
                    "nullable": true
                },
                {
                    "name": "version",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "owner_id",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "user_metadata",
                    "type": "jsonb",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "level",
                    "type": "integer",
                    "comment": null,
                    "default": null,
                    "nullable": true
                }
            ],
            "comment": null,
            "indexes": [
                {
                    "def": "CREATE UNIQUE INDEX objects_pkey ON storage.objects USING btree (id)",
                    "name": "objects_pkey"
                },
                {
                    "def": "CREATE UNIQUE INDEX bucketid_objname ON storage.objects USING btree (bucket_id, name)",
                    "name": "bucketid_objname"
                },
                {
                    "def": "CREATE INDEX idx_objects_bucket_id_name ON storage.objects USING btree (bucket_id, name COLLATE \"C\")",
                    "name": "idx_objects_bucket_id_name"
                },
                {
                    "def": "CREATE INDEX name_prefix_search ON storage.objects USING btree (name text_pattern_ops)",
                    "name": "name_prefix_search"
                },
                {
                    "def": "CREATE UNIQUE INDEX idx_name_bucket_level_unique ON storage.objects USING btree (name COLLATE \"C\", bucket_id, level)",
                    "name": "idx_name_bucket_level_unique"
                },
                {
                    "def": "CREATE UNIQUE INDEX objects_bucket_id_level_idx ON storage.objects USING btree (bucket_id, level, name COLLATE \"C\")",
                    "name": "objects_bucket_id_level_idx"
                },
                {
                    "def": "CREATE INDEX idx_objects_lower_name ON storage.objects USING btree ((path_tokens[level]), lower(name) text_pattern_ops, bucket_id, level)",
                    "name": "idx_objects_lower_name"
                }
            ],
            "policies": [
            ],
            "primary_key": [
                "id"
            ],
            "foreign_keys": [
                {
                    "name": "objects_bucketId_fkey",
                    "delete": "a",
                    "update": "a",
                    "columns": [
                        "bucket_id"
                    ],
                    "references": {
                        "table": "buckets",
                        "schema": "storage",
                        "columns": [
                            "id"
                        ]
                    }
                }
            ]
        },
        {
            "table": "prefixes",
            "schema": "storage",
            "columns": [
                {
                    "name": "bucket_id",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "name",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "level",
                    "type": "integer",
                    "comment": null,
                    "default": "storage.get_level(name)",
                    "nullable": false
                },
                {
                    "name": "created_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": "now()",
                    "nullable": true
                },
                {
                    "name": "updated_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": "now()",
                    "nullable": true
                }
            ],
            "comment": null,
            "indexes": [
                {
                    "def": "CREATE UNIQUE INDEX prefixes_pkey ON storage.prefixes USING btree (bucket_id, level, name)",
                    "name": "prefixes_pkey"
                },
                {
                    "def": "CREATE INDEX idx_prefixes_lower_name ON storage.prefixes USING btree (bucket_id, level, ((string_to_array(name, '/'::text))[level]), lower(name) text_pattern_ops)",
                    "name": "idx_prefixes_lower_name"
                }
            ],
            "policies": [
            ],
            "primary_key": [
                "bucket_id",
                "level",
                "name"
            ],
            "foreign_keys": [
                {
                    "name": "prefixes_bucketId_fkey",
                    "delete": "a",
                    "update": "a",
                    "columns": [
                        "bucket_id"
                    ],
                    "references": {
                        "table": "buckets",
                        "schema": "storage",
                        "columns": [
                            "id"
                        ]
                    }
                }
            ]
        },
        {
            "table": "s3_multipart_uploads",
            "schema": "storage",
            "columns": [
                {
                    "name": "id",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "in_progress_size",
                    "type": "bigint",
                    "comment": null,
                    "default": "0",
                    "nullable": false
                },
                {
                    "name": "upload_signature",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "bucket_id",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "key",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "version",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "owner_id",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "created_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": "now()",
                    "nullable": false
                },
                {
                    "name": "user_metadata",
                    "type": "jsonb",
                    "comment": null,
                    "default": null,
                    "nullable": true
                }
            ],
            "comment": null,
            "indexes": [
                {
                    "def": "CREATE UNIQUE INDEX s3_multipart_uploads_pkey ON storage.s3_multipart_uploads USING btree (id)",
                    "name": "s3_multipart_uploads_pkey"
                },
                {
                    "def": "CREATE INDEX idx_multipart_uploads_list ON storage.s3_multipart_uploads USING btree (bucket_id, key, created_at)",
                    "name": "idx_multipart_uploads_list"
                }
            ],
            "policies": [
            ],
            "primary_key": [
                "id"
            ],
            "foreign_keys": [
                {
                    "name": "s3_multipart_uploads_bucket_id_fkey",
                    "delete": "a",
                    "update": "a",
                    "columns": [
                        "bucket_id"
                    ],
                    "references": {
                        "table": "buckets",
                        "schema": "storage",
                        "columns": [
                            "id"
                        ]
                    }
                }
            ]
        },
        {
            "table": "s3_multipart_uploads_parts",
            "schema": "storage",
            "columns": [
                {
                    "name": "id",
                    "type": "uuid",
                    "comment": null,
                    "default": "gen_random_uuid()",
                    "nullable": false
                },
                {
                    "name": "upload_id",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "size",
                    "type": "bigint",
                    "comment": null,
                    "default": "0",
                    "nullable": false
                },
                {
                    "name": "part_number",
                    "type": "integer",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "bucket_id",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "key",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "etag",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "owner_id",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": true
                },
                {
                    "name": "version",
                    "type": "text",
                    "comment": null,
                    "default": null,
                    "nullable": false
                },
                {
                    "name": "created_at",
                    "type": "timestamp with time zone",
                    "comment": null,
                    "default": "now()",
                    "nullable": false
                }
            ],
            "comment": null,
            "indexes": [
                {
                    "def": "CREATE UNIQUE INDEX s3_multipart_uploads_parts_pkey ON storage.s3_multipart_uploads_parts USING btree (id)",
                    "name": "s3_multipart_uploads_parts_pkey"
                }
            ],
            "policies": [
            ],
            "primary_key": [
                "id"
            ],
            "foreign_keys": [
                {
                    "name": "s3_multipart_uploads_parts_bucket_id_fkey",
                    "delete": "a",
                    "update": "a",
                    "columns": [
                        "bucket_id"
                    ],
                    "references": {
                        "table": "buckets",
                        "schema": "storage",
                        "columns": [
                            "id"
                        ]
                    }
                },
                {
                    "name": "s3_multipart_uploads_parts_upload_id_fkey",
                    "delete": "c",
                    "update": "a",
                    "columns": [
                        "upload_id"
                    ],
                    "references": {
                        "table": "s3_multipart_uploads",
                        "schema": "storage",
                        "columns": [
                            "id"
                        ]
                    }
                }
            ]
        }
    ],
    "triggers": [
        {
            "name": "trg_set_required_qty",
            "table": "event_items",
            "schema": "public",
            "comment": null,
            "definition": "CREATE TRIGGER trg_set_required_qty BEFORE INSERT OR UPDATE OF per_guest_qty ON public.event_items FOR EACH ROW EXECUTE FUNCTION trg_set_required_qty_on_items()"
        },
        {
            "name": "set_timestamp_join_requests",
            "table": "event_join_requests",
            "schema": "public",
            "comment": null,
            "definition": "CREATE TRIGGER set_timestamp_join_requests BEFORE UPDATE ON public.event_join_requests FOR EACH ROW EXECUTE FUNCTION trigger_set_timestamp()"
        },
        {
            "name": "trg_attendee_count",
            "table": "event_participants",
            "schema": "public",
            "comment": null,
            "definition": "CREATE TRIGGER trg_attendee_count AFTER INSERT OR DELETE OR UPDATE ON public.event_participants FOR EACH ROW EXECUTE FUNCTION trg_update_attendee_count()"
        },
        {
            "name": "trg_recalc_on_events",
            "table": "events",
            "schema": "public",
            "comment": null,
            "definition": "CREATE TRIGGER trg_recalc_on_events AFTER UPDATE OF attendee_count, min_guests ON public.events FOR EACH ROW WHEN (((old.attendee_count <> new.attendee_count) OR (old.min_guests <> new.min_guests))) EXECUTE FUNCTION trg_recalc_required_qty()"
        },
        {
            "name": "set_timestamp_item_catalog",
            "table": "item_catalog",
            "schema": "public",
            "comment": null,
            "definition": "CREATE TRIGGER set_timestamp_item_catalog BEFORE UPDATE ON public.item_catalog FOR EACH ROW EXECUTE FUNCTION trigger_set_timestamp()"
        },
        {
            "name": "set_timestamp_notifications",
            "table": "notifications",
            "schema": "public",
            "comment": null,
            "definition": "CREATE TRIGGER set_timestamp_notifications BEFORE UPDATE ON public.notifications FOR EACH ROW EXECUTE FUNCTION trigger_set_timestamp()"
        },
        {
            "name": "set_timestamp_user_items",
            "table": "user_items",
            "schema": "public",
            "comment": null,
            "definition": "CREATE TRIGGER set_timestamp_user_items BEFORE UPDATE ON public.user_items FOR EACH ROW EXECUTE FUNCTION trigger_set_timestamp()"
        }
    ],
    "functions": [
        {
            "name": "availability_for_event",
            "schema": "public",
            "source": "\r\n    WITH event_capacity AS (\r\n        SELECT capacity_total as total\r\n        FROM public.events \r\n        WHERE id = event_uuid\r\n    ),\r\n    confirmed_participants AS (\r\n        SELECT COALESCE(SUM(party_size), 0) as confirmed\r\n        FROM public.event_participants \r\n        WHERE event_id = event_uuid \r\n        AND status = 'accepted'\r\n    ),\r\n    active_holds AS (\r\n        SELECT COALESCE(SUM(party_size), 0) as held\r\n        FROM public.event_join_requests \r\n        WHERE event_id = event_uuid \r\n        AND status = 'pending' \r\n        AND hold_expires_at > now()\r\n    )\r\n    SELECT \r\n        ec.total,\r\n        cp.confirmed,\r\n        ah.held,\r\n        GREATEST(0, ec.total - cp.confirmed - ah.held) as available\r\n    FROM event_capacity ec\r\n    CROSS JOIN confirmed_participants cp  \r\n    CROSS JOIN active_holds ah;\r\n",
            "comment": "Calculate event capacity: total, confirmed, held, available",
            "returns": "TABLE(total integer, confirmed integer, held integer, available integer)",
            "security": "SECURITY INVOKER",
            "arguments": "event_uuid uuid",
            "volatility": "STABLE"
        },
        {
            "name": "create_event_with_items",
            "schema": "public",
            "source": "DECLARE\r\n  v_event      public.events%ROWTYPE;\r\n  v_location   uuid;\r\n  v_items      jsonb;\r\nBEGIN\r\n  -- 1️⃣  Resolve or insert location -----------------------------------------\r\n/* ---------- 1️⃣  Resolve or insert location -------------------------------- */\r\n/* ---------- 1️⃣  Resolve or insert location -------------------------------- */\r\nWITH loc AS (\r\n  SELECT\r\n    _payload->'location'                     AS l,\r\n    (_payload->'location'->>'place_id')      AS g_id,\r\n    (_payload->'location'->>'name')          AS raw_name,\r\n    NULLIF(_payload->'location'->>'formatted_address','') AS f_addr,\r\n    (_payload->'location'->>'latitude') :: double precision  AS lat,\r\n    (_payload->'location'->>'longitude'):: double precision  AS lon\r\n),\r\n\r\n-- ---------- try insert via place_id if provided ----------\r\nins_by_place AS (\r\n  INSERT INTO public.locations\r\n        (place_id, name, formatted_address, latitude, longitude, created_by)\r\n  SELECT  g_id, raw_name, f_addr, lat, lon, _actor_id\r\n  FROM   loc\r\n  WHERE  g_id IS NOT NULL\r\n  ON CONFLICT ON CONSTRAINT uniq_locations_placeid\r\n\r\n\r\n  DO NOTHING\r\n  RETURNING id\r\n),\r\n\r\n-- ---------- if no place_id (or null) fall back to grid+name ----------\r\nins_by_grid AS (\r\n  INSERT INTO public.locations\r\n        (name, formatted_address, latitude, longitude, created_by)\r\n  SELECT  raw_name, f_addr, lat, lon, _actor_id\r\n  FROM   loc l\r\n  WHERE  l.g_id IS NULL      -- only when we couldn't use place_id\r\n  ON CONFLICT ON CONSTRAINT uniq_locations_grid_name\r\n  DO NOTHING\r\n  RETURNING id\r\n)\r\n\r\nSELECT COALESCE(\r\n         (SELECT id FROM ins_by_place),\r\n         (SELECT id FROM ins_by_grid),\r\n         (  -- existing row by place_id\r\n            SELECT id FROM public.locations p\r\n            CROSS JOIN loc l2\r\n            WHERE p.place_id = l2.g_id\r\n         ),\r\n         (  -- existing row by grid+canonical name\r\n            SELECT p.id\r\n            FROM   public.locations p\r\n            CROSS JOIN loc l2\r\n            WHERE  p.lat6 = round(l2.lat::numeric, 6)\r\n              AND  p.lon6 = round(l2.lon::numeric, 6)\r\n              AND  p.canonical_name =\r\n                   lower(trim(regexp_replace(l2.raw_name, '\\s+',' ','g')))\r\n            LIMIT 1\r\n         )\r\n       )\r\nINTO v_location;\r\n\r\n\r\n\r\n\r\n  -- 2️⃣  Insert event ---------------------------------------------------------\r\n  INSERT INTO public.events (\r\n    title, description, location_id, event_date,\r\n    min_guests, max_guests, meal_type,\r\n    status, created_by\r\n  ) VALUES (\r\n    _payload->>'title',\r\n    NULLIF(_payload->>'description','') ,\r\n    v_location,\r\n    (_payload->>'event_date')::timestamptz,\r\n    (_payload->>'min_guests')::int,\r\n    NULLIF((_payload->>'max_guests')::int, 0),\r\n    (_payload->>'meal_type')::meal_type,\r\n    'draft',\r\n    _actor_id\r\n  ) RETURNING * INTO v_event;\r\n\r\n  -- 2b  Auto RSVP host --------------------------------------------------------\r\nINSERT INTO public.event_participants\r\n        (event_id, user_id, role, status)\r\nVALUES  (v_event.id, _actor_id, 'host', 'accepted'::rsvp_status);\r\n\r\n\r\n  -- 3️⃣  Insert item slots ----------------------------------------------------\r\n  INSERT INTO public.event_items (\r\n    event_id, name, category, per_guest_qty, required_qty, created_by\r\n  )\r\n  SELECT v_event.id,\r\n         (itm->>'name')::text,\r\n         NULLIF(itm->>'category',''),\r\n         (itm->>'per_guest_qty')::numeric,\r\n         (itm->>'per_guest_qty')::numeric * (_payload->>'min_guests')::int,\r\n         _actor_id\r\n  FROM jsonb_array_elements(_payload->'items') itm;\r\n\r\n  -- 4️⃣  Aggregate items to return -------------------------------------------\r\n  SELECT jsonb_agg(to_jsonb(ei.*)) INTO v_items\r\n  FROM   public.event_items ei\r\n  WHERE  ei.event_id = v_event.id;\r\n\r\n  -- 5️⃣  Return composite -----------------------------------------------------\r\n  RETURN jsonb_build_object(\r\n    'event', to_jsonb(v_event),\r\n    'items', v_items\r\n  );\r\n\r\nEXCEPTION WHEN others THEN\r\n  RAISE;\r\nEND;",
            "comment": null,
            "returns": "jsonb",
            "security": "SECURITY DEFINER",
            "arguments": "_actor_id uuid, _payload jsonb",
            "volatility": "VOLATILE"
        },
        {
            "name": "expire_join_request_holds",
            "schema": "public",
            "source": "\r\n    WITH updated AS (\r\n        UPDATE public.event_join_requests \r\n        SET status = 'expired', updated_at = now()\r\n        WHERE status = 'pending' \r\n        AND hold_expires_at IS NOT NULL \r\n        AND hold_expires_at <= now()\r\n        RETURNING 1\r\n    )\r\n    SELECT COUNT(*) FROM updated;\r\n",
            "comment": "Background job function to expire pending holds",
            "returns": "integer",
            "security": "SECURITY INVOKER",
            "arguments": "",
            "volatility": "VOLATILE"
        },
        {
            "name": "find_nearby_events",
            "schema": "public",
            "source": "\r\n  WITH user_point AS (\r\n    SELECT ST_SetSRID(ST_MakePoint(user_lon, user_lat), 4326)::geography AS geom,\r\n           radius_km * 1000 AS radius_m\r\n  )\r\n  SELECT\r\n    e.id,\r\n    e.title,\r\n    e.description,\r\n    e.event_date,\r\n    l.formatted_address AS city,\r\n    ST_Distance(\r\n      ST_SetSRID(ST_MakePoint(l.longitude, l.latitude), 4326)::geography,\r\n      up.geom\r\n    ) AS distance_m,\r\n    e.is_public,\r\n    e.status,\r\n    e.capacity_total,\r\n    e.attendee_count\r\n  FROM public.events e\r\n  JOIN public.locations l ON l.id = e.location_id\r\n  CROSS JOIN user_point up\r\n  WHERE e.status = 'published'\r\n    AND e.is_public = true\r\n    AND l.latitude IS NOT NULL\r\n    AND l.longitude IS NOT NULL\r\n    AND ST_DWithin(\r\n      ST_SetSRID(ST_MakePoint(l.longitude, l.latitude), 4326)::geography,\r\n      up.geom,\r\n      up.radius_m\r\n    )\r\n  ORDER BY distance_m ASC, e.event_date ASC\r\n  LIMIT limit_count\r\n  OFFSET offset_count;\r\n",
            "comment": null,
            "returns": "TABLE(id uuid, title text, description text, event_date timestamp with time zone, city text, distance_m double precision, is_public boolean, status text, capacity_total integer, attendee_count integer)",
            "security": "SECURITY INVOKER",
            "arguments": "user_lat double precision, user_lon double precision, radius_km integer, limit_count integer, offset_count integer",
            "volatility": "STABLE"
        },
        {
            "name": "find_nearby_users_for_latlon",
            "schema": "public",
            "source": "\r\n  WITH event_point AS (\r\n    SELECT ST_SetSRID(ST_MakePoint(p_lon, p_lat), 4326)::geography AS geom,\r\n           p_radius_km * 1000 AS event_radius_m\r\n  )\r\n  SELECT\r\n    up.user_id,\r\n    ST_Distance(up.home_geog, ep.geom) AS distance_m\r\n  FROM public.user_profiles up, event_point ep\r\n  WHERE up.discoverability_enabled = true\r\n    AND up.home_geog IS NOT NULL\r\n    AND ST_DWithin(\r\n      up.home_geog,\r\n      ep.geom,\r\n      LEAST(up.discoverability_radius_km * 1000, ep.event_radius_m)\r\n    );\r\n",
            "comment": null,
            "returns": "TABLE(user_id uuid, distance_m double precision)",
            "security": "SECURITY INVOKER",
            "arguments": "p_lat double precision, p_lon double precision, p_radius_km integer",
            "volatility": "STABLE"
        },
        {
            "name": "process_join_request",
            "schema": "public",
            "source": "\r\nDECLARE\r\n  v_total int;\r\n  v_confirmed int;\r\n  v_held int;\r\n  v_available int;\r\n  v_req public.event_join_requests;\r\n  v_hold_expires timestamptz;\r\nBEGIN\r\n  -- Lock event row to serialize capacity decisions\r\n  SELECT capacity_total INTO v_total\r\n  FROM public.events\r\n  WHERE id = p_event_id\r\n  FOR UPDATE;\r\n\r\n  IF NOT FOUND THEN RAISE EXCEPTION 'Event not found'; END IF;\r\n\r\n  -- Seats in use: accepted participants (sum party_size)\r\n  SELECT COALESCE(SUM(party_size),0) INTO v_confirmed\r\n  FROM public.event_participants\r\n  WHERE event_id = p_event_id AND status = 'accepted'\r\n  FOR UPDATE;\r\n\r\n  -- Held seats: pending requests not expired\r\n  SELECT COALESCE(SUM(party_size),0) INTO v_held\r\n  FROM public.event_join_requests\r\n  WHERE event_id = p_event_id AND status = 'pending' AND (hold_expires_at IS NOT NULL AND hold_expires_at > now())\r\n  FOR UPDATE;\r\n\r\n  v_available := CASE WHEN v_total IS NULL THEN NULL ELSE v_total - v_confirmed - v_held END;\r\n\r\n  IF v_total IS NULL THEN\r\n    -- Unlimited: approve immediately\r\n    INSERT INTO public.event_participants(event_id, user_id, status, party_size, joined_at)\r\n    VALUES (p_event_id, p_user_id, 'accepted', p_party_size, now());\r\n\r\n    INSERT INTO public.event_join_requests(event_id, user_id, party_size, note, status)\r\n    VALUES (p_event_id, p_user_id, p_party_size, p_note, 'approved')\r\n    RETURNING * INTO v_req;\r\n\r\n    RETURN v_req;\r\n  END IF;\r\n\r\n  IF p_auto_approve AND v_available >= p_party_size THEN\r\n    -- Auto-approve path\r\n    INSERT INTO public.event_participants(event_id, user_id, status, party_size, joined_at)\r\n    VALUES (p_event_id, p_user_id, 'accepted', p_party_size, now());\r\n\r\n    INSERT INTO public.event_join_requests(event_id, user_id, party_size, note, status)\r\n    VALUES (p_event_id, p_user_id, p_party_size, p_note, 'approved')\r\n    RETURNING * INTO v_req;\r\n\r\n    RETURN v_req;\r\n  ELSIF v_available >= p_party_size THEN\r\n    -- Seat is available but host wants approval: place a timed hold\r\n    v_hold_expires := now() + make_interval(mins => p_hold_ttl_minutes);\r\n    INSERT INTO public.event_join_requests(event_id, user_id, party_size, note, status, hold_expires_at)\r\n    VALUES (p_event_id, p_user_id, p_party_size, p_note, 'pending', v_hold_expires)\r\n    RETURNING * INTO v_req;\r\n\r\n    RETURN v_req;\r\n  ELSE\r\n    -- Not enough seats → waitlist (priority FIFO by default)\r\n    INSERT INTO public.event_join_requests(event_id, user_id, party_size, note, status, waitlist_pos)\r\n    VALUES (p_event_id, p_user_id, p_party_size, p_note, 'waitlisted', EXTRACT(EPOCH FROM now()))\r\n    RETURNING * INTO v_req;\r\n\r\n    RETURN v_req;\r\n  END IF;\r\nEND;\r\n",
            "comment": null,
            "returns": "event_join_requests",
            "security": "SECURITY INVOKER",
            "arguments": "p_event_id uuid, p_user_id uuid, p_party_size integer, p_note text, p_hold_ttl_minutes integer, p_auto_approve boolean",
            "volatility": "VOLATILE"
        },
        {
            "name": "trg_recalc_required_qty",
            "schema": "public",
            "source": "\r\ndeclare\r\n  _headcount int;\r\nbegin\r\n  -- Recompute for one event (new.id) after attendee_count or min_guests changed\r\n  select greatest(min_guests, attendee_count) into _headcount\r\n  from events where id = new.id;\r\n\r\n  update event_items\r\n  set required_qty = per_guest_qty * _headcount\r\n  where event_id = new.id;\r\n\r\n  return null;\r\nend;\r\n",
            "comment": null,
            "returns": "trigger",
            "security": "SECURITY INVOKER",
            "arguments": "",
            "volatility": "VOLATILE"
        },
        {
            "name": "trg_set_required_qty_on_items",
            "schema": "public",
            "source": "\r\ndeclare\r\n  _headcount int;\r\nbegin\r\n  select greatest(min_guests, attendee_count) into _headcount\r\n  from events where id = new.event_id;\r\n\r\n  new.required_qty := new.per_guest_qty * _headcount;\r\n  return new;\r\nend;\r\n",
            "comment": null,
            "returns": "trigger",
            "security": "SECURITY INVOKER",
            "arguments": "",
            "volatility": "VOLATILE"
        },
        {
            "name": "trg_update_attendee_count",
            "schema": "public",
            "source": "\r\nBEGIN\r\n  IF TG_OP = 'INSERT' THEN\r\n    IF NEW.status = 'accepted' THEN\r\n      UPDATE events\r\n      SET attendee_count = attendee_count + COALESCE(NEW.party_size, 1)\r\n      WHERE id = NEW.event_id;\r\n    END IF;\r\n\r\n  ELSIF TG_OP = 'UPDATE' THEN\r\n    -- Status change away from accepted: subtract OLD party size\r\n    IF OLD.status = 'accepted' AND NEW.status <> 'accepted' THEN\r\n      UPDATE events\r\n      SET attendee_count = attendee_count - COALESCE(OLD.party_size, 1)\r\n      WHERE id = NEW.event_id;\r\n\r\n    -- Status change to accepted: add NEW party size\r\n    ELSIF OLD.status <> 'accepted' AND NEW.status = 'accepted' THEN\r\n      UPDATE events\r\n      SET attendee_count = attendee_count + COALESCE(NEW.party_size, 1)\r\n      WHERE id = NEW.event_id;\r\n\r\n    -- Party size changed while accepted: adjust by delta\r\n    ELSIF NEW.status = 'accepted' AND COALESCE(OLD.party_size, 1) <> COALESCE(NEW.party_size, 1) THEN\r\n      UPDATE events\r\n      SET attendee_count = attendee_count + (COALESCE(NEW.party_size, 1) - COALESCE(OLD.party_size, 1))\r\n      WHERE id = NEW.event_id;\r\n    END IF;\r\n\r\n  ELSIF TG_OP = 'DELETE' THEN\r\n    IF OLD.status = 'accepted' THEN\r\n      UPDATE events\r\n      SET attendee_count = attendee_count - COALESCE(OLD.party_size, 1)\r\n      WHERE id = OLD.event_id;\r\n    END IF;\r\n  END IF;\r\n\r\n  RETURN COALESCE(NEW, OLD);\r\nEND;\r\n",
            "comment": null,
            "returns": "trigger",
            "security": "SECURITY INVOKER",
            "arguments": "",
            "volatility": "VOLATILE"
        },
        {
            "name": "update_request_status",
            "schema": "public",
            "source": "\r\nDECLARE\r\n  request_row event_join_requests;\r\n  availability_data RECORD;\r\nBEGIN\r\n  -- Lock and get the request\r\n  SELECT * INTO request_row\r\n  FROM public.event_join_requests\r\n  WHERE id = request_id\r\n  FOR UPDATE;\r\n  \r\n  IF NOT FOUND THEN\r\n    RAISE EXCEPTION 'Request not found';\r\n  END IF;\r\n  \r\n  -- Check expected status if provided\r\n  IF expected_status IS NOT NULL AND request_row.status != expected_status THEN\r\n    RAISE EXCEPTION 'Invalid status transition: expected %, got %', expected_status, request_row.status;\r\n  END IF;\r\n  \r\n  -- For approvals, check capacity and create participant\r\n  IF new_status = 'approved' AND (request_row.status = 'pending' OR request_row.status = 'waitlisted') THEN\r\n    -- Get current availability atomically\r\n    SELECT * FROM availability_for_event(request_row.event_id) INTO availability_data;\r\n    \r\n    IF availability_data.available < request_row.party_size THEN\r\n      RAISE EXCEPTION 'Insufficient capacity: need %, have %', request_row.party_size, availability_data.available;\r\n    END IF;\r\n    \r\n    -- Create participant record\r\n    INSERT INTO public.event_participants (event_id, user_id, status, party_size, joined_at)\r\n    VALUES (request_row.event_id, request_row.user_id, 'accepted', request_row.party_size, now());\r\n  END IF;\r\n  \r\n  -- Update the request\r\n  UPDATE public.event_join_requests \r\n  SET status = new_status, updated_at = now()\r\n  WHERE id = request_id\r\n  RETURNING * INTO request_row;\r\n  \r\n  RETURN request_row;\r\nEND;\r\n",
            "comment": "Atomically update request status with capacity checking",
            "returns": "event_join_requests",
            "security": "SECURITY INVOKER",
            "arguments": "request_id uuid, new_status text, expected_status text",
            "volatility": "VOLATILE"
        },
        {
            "name": "update_user_location",
            "schema": "public",
            "source": "\r\nBEGIN\r\n  UPDATE public.user_profiles\r\n  SET\r\n    home_geog = ST_SetSRID(ST_MakePoint(p_longitude, p_latitude), 4326)::geography,\r\n    city = COALESCE(p_city, city),\r\n    geo_precision = COALESCE(p_geo_precision, geo_precision),\r\n    updated_at = now()\r\n  WHERE user_id = p_user_id;\r\n\r\n  IF NOT FOUND THEN\r\n    INSERT INTO public.user_profiles (user_id, home_geog, city, geo_precision)\r\n    VALUES (\r\n      p_user_id,\r\n      ST_SetSRID(ST_MakePoint(p_longitude, p_latitude), 4326)::geography,\r\n      p_city,\r\n      p_geo_precision\r\n    );\r\n  END IF;\r\n\r\n  RETURN TRUE;\r\nEND;\r\n",
            "comment": null,
            "returns": "boolean",
            "security": "SECURITY INVOKER",
            "arguments": "p_user_id uuid, p_latitude double precision, p_longitude double precision, p_city text, p_geo_precision text",
            "volatility": "VOLATILE"
        }
    ],
    "generated_at": "2025-09-21T14:02:05Z"
}
